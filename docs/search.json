[
  {
    "objectID": "tutorials/AQI_tutorial.html#introduction",
    "href": "tutorials/AQI_tutorial.html#introduction",
    "title": "AQI Part 1 - Introduction to Data Science",
    "section": "Introduction",
    "text": "Introduction\nWelcome to this lesson on air quality! We’ll be using data science to learn about air quality. This tutorial will introduce coding to help you better understand air quality. Advance through the tutorial by clicking the blue “Continue” buttons. By the end of the tutorial, you will see how to create an air quality graph.\nNote, this is Part 1 of the air quality tutorials. In Part 2, you will be able to customize air quality graphs for any location you choose! Click here to navigate to Part 2 now.\n\nFirst, let’s learn about air quality. Check out this video to learn more about how air quality affects us.\n\nClick “Continue” to move to the next section.\n\nContinue",
    "crumbs": [
      "Air Quality Tutorials",
      "AQI Part 1 - Introduction to Data Science"
    ]
  },
  {
    "objectID": "tutorials/AQI_tutorial.html#data-science",
    "href": "tutorials/AQI_tutorial.html#data-science",
    "title": "AQI Part 1 - Introduction to Data Science",
    "section": "Data Science",
    "text": "Data Science\nWhat is data?\n\nData is large amounts of information that you collect. Often, it looks like a lot of numbers that are collected to describe some phenomenon.\nFor example, if you measure the temperature every day in one location for one year, you would have created data. You can then use data science to analyze that data.\n\nWhat is data science?\n\nData science is the ability to synthesize data and derive meaningful information. Often, graphs, maps, models, and charts are used to help understand data and display information.\n\nStop and think\n\nQuestion\n\n\n\nWhat is an example of data?\n\n\n\n\n ✓The age and grade of everyone in your school\n\n\n ✓The favorite restaurant of everyone who walks down your street\n\n\n ✓The pm2.5 data for every day in 2023 in Portland\n\n\n ✓All of the above\n\n\n\n\n\n\n\n\n\nContinue",
    "crumbs": [
      "Air Quality Tutorials",
      "AQI Part 1 - Introduction to Data Science"
    ]
  },
  {
    "objectID": "tutorials/AQI_tutorial.html#using-the-computer-to-do-data-science",
    "href": "tutorials/AQI_tutorial.html#using-the-computer-to-do-data-science",
    "title": "AQI Part 1 - Introduction to Data Science",
    "section": "Using the computer to do data science",
    "text": "Using the computer to do data science\nIn this tutorial, we’re going to use coding to analyze large amounts of data. We’ll be able to create graphs by writing code.\nWe’re going to use a coding language called R. Basically, “R” is a collection of commands that the computer understands. You can tell the computer one of the commands and it will know to do something.",
    "crumbs": [
      "Air Quality Tutorials",
      "AQI Part 1 - Introduction to Data Science"
    ]
  },
  {
    "objectID": "tutorials/AQI_tutorial.html#our-data",
    "href": "tutorials/AQI_tutorial.html#our-data",
    "title": "AQI Part 1 - Introduction to Data Science",
    "section": "Our data",
    "text": "Our data\n\n\nToday, we’ll be looking at air quality data from the EPA. It contains data that was collected nearly every day for 23 years (2000-2023). It calculates the air quality index based on the PM 2.5 levels.\nWe’re focusing on Portland and Los Angeles air quality data.\n\n\n\n\n\n\n\nImage from https://cleanairenc.org/ blog/2017/02/16/ north-carolinas-air-quality/\n\n\n\n\n\nFrom.maps.google.com\n\n\nClick the blue box below to view the data.\n\n\n\n\n\n\nAir quality raw data Portland\n\n\n\n\n\n\n\nWarning in instance$preRenderHook(instance): It seems your data is too big for\nclient-side DataTables. You may consider server-side processing:\nhttps://rstudio.github.io/DT/server.html\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAir quality raw data Los Angelos\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWow that’s a lot of data! It’s pretty hard to get any meaningful information from just that table of information. Luckily, we can use R to better understand it and make graphs!\nBefore we use R, though, let’s try to understand a bit of what’s going on.\n\nAt the top of the table, there are bolded words. These are column titles and refer to the variable names that are collected when measuring air quality.\nUnderneath the variable names, you’ll see individual entries for the data.\nAt the very bottom of the data table, you can click to different pages of data and see how many total entries there are.\n\nStop and think\n\nQuestion\n\n\n\nHow many data entries are there in the Los Angeles data?\n\n\n\n\n ✓8,594 data entries\n\n\n ✗8,744 data entries\n\n\n ✗10 data entries\n\n\n ✗100 data entries\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nWhat was the PM2.5 AQI Value in Portland on 01/01/2000?\n\n\n\n\n ✗158\n\n\n ✗62\n\n\n ✓49\n\n\n ✗100\n\n\n\n\n\n\n\n\n\nContinue",
    "crumbs": [
      "Air Quality Tutorials",
      "AQI Part 1 - Introduction to Data Science"
    ]
  },
  {
    "objectID": "tutorials/AQI_tutorial.html#graphing-our-data",
    "href": "tutorials/AQI_tutorial.html#graphing-our-data",
    "title": "AQI Part 1 - Introduction to Data Science",
    "section": "Graphing our data",
    "text": "Graphing our data\nNow that we understand what the data table contains, let’s try to graph it and better understand what it means.\nOur goal is to make a graph of the overall air quality in Portland and Los Angeles by describing how healthy or unhealthy the air is.\nThe EPA defines the following categories based on the air quality index (AQI):\n\n\n\nFrom https://www.airnow.gov/aqi/aqi-basics/\n\n\nWe’ve inputted these values and colors into our code for the graph.\nYou may have noticed that if you go to the EPA website, they have options to generate a graph right there! So why would we make our own graph? Well, they have pretty limited options for what type of graph you can create and what variables you can choose. If we use R (coding), we have lots more options for types of graphs!\n\nAQI Tile Plot\nWe’ll start by making a tile plot for the air quality index (AQI) from 2000-2023. Let’s see what the graph looks like for Portland and Los Angeles. Later on, you’ll have options to create other types of graphs for more locations.\nPress run code below. Then, click through the tabs at the top of the code chunk to make a tile graph for Los Angeles.\n\nPortland AQI Tile GraphLos Angeles AQI Tile GraphTroubleshooting\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nRun Code button not working: Make sure you wait until the green circle at the very top of this page says “Ready!” We have some code running in the background and the green circle indicates it has finished running. \nError message: Did you accidentally delete or change some code? Click the refresh button at the top of the code cell and try running it again.\n\n\n\n\n\nStop and think\nTalk with your neighbor about the graphs!\n\nWhat do you notice?\nWhat do you wonder?\nWhat is different between the two graphs?\n-   Why are they different? \nWhat else would you like to know?\n\n\n\n\n\n\n\n\nIf you’re using the slides, you may notice these graphs are different than the ones in the presentation. Open this to learn why!\n\n\n\n\n\nIf you are using the corresponding slides for this lesson, you’ll notice that the graphs in slides 28 and 30 look different than the graphs you made in this tutorial. The reason for this is a bit complicated, but I’ll try to explain below. In short, the graphs in this tutorial and the EPA graphs are correct, but the EPA should do a better job labeling their graphs - their legend is very misleading!\nThe graphs in the slides were made from the same data as the EPA used and as we used in this tutorial. So why would they look different?\n\nWell, if you look at the legend on the EPA graph, you’ll notice that the units are ug/m3. See slide 29 in the middle school slides or slide 28 in the high school slides.\nThis led us to believe that the data was also recorded in those units (ug/m3), as there was no other indication of units in the raw data. Hence, we created the graphs on slide 28 & 30 using those legend numbers (i.e. “good” was coded as anything under 12, “moderate” as anything between 12.1-35.4).\nBut, some weird things started going on with the data and graphs - the graphs we made had extra bad air quality.\nSo, I emailed the EPA to figure out what was going on with the data and their graphs. As it turns out, their graph legend uses the units ug/m3, BUT the data used to create the graph was originally in different units! The data used to create the graph uses an Air Quality Index scale between 0-500. Unfortunately this was not clear in their raw data.\n\nConclusion: It’s important to be very clear about the units you are using when graphing, and the units in the raw data! Even large agencies like the EPA can be quite unclear about this.\nIn case you’re still curious, here’s the response from the EPA with a website you can check out to better understand their data: You’re spot on, the legend for the tile plot is showing the AQI breakpoints as they relate to the selected pollutant’s concentration, but the data itself is only showing AQI values. Look at Table 6. in this technical assistance document to see the AQI breakpoints for each pollutant: https://www.airnow.gov/publications/air-quality-index/technical-assistance-document-for-reporting-the-daily-aqi/.\n\n\n\n\nContinue",
    "crumbs": [
      "Air Quality Tutorials",
      "AQI Part 1 - Introduction to Data Science"
    ]
  },
  {
    "objectID": "tutorials/biodiversity_tutorial.html#introduction",
    "href": "tutorials/biodiversity_tutorial.html#introduction",
    "title": "Biodiversity tutorial",
    "section": "Introduction",
    "text": "Introduction\nToday we’ll be looking at biodiversity!\nWe’re going to using coding to help us think about biodiversity and make graphs."
  },
  {
    "objectID": "tutorials/biodiversity_tutorial.html#what-is-biodiversity",
    "href": "tutorials/biodiversity_tutorial.html#what-is-biodiversity",
    "title": "Biodiversity tutorial",
    "section": "What is biodiversity?",
    "text": "What is biodiversity?\nBiodiversity is the variety of all life on Earth. It is often measured by the number of species in an ecosystem.\nHere’s a video to learn more about biodiversity and how we can calculate it using Simpson’s Diversity Index.\n\nCollecting data\nTo better understand the biodiversity in an ecosystem, scientists perform field work where they record information about an ecosystem. Let’s learn about the Borneo rainforst where scientists collect data about the plants, animals, and ecological factors there.\n\nAfter scientists collect all this data, other people analyze it. They import and process data and then generate graphs and perform statistical analyses to learn more about what is happening in that ecosystem.\nToday, we’re going to learn more about how to analyze data. We’ll use a coding language called R to process and analyze biodiversity data.\n\nContinue"
  },
  {
    "objectID": "tutorials/biodiversity_tutorial.html#what-is-r-and-what-can-it-do",
    "href": "tutorials/biodiversity_tutorial.html#what-is-r-and-what-can-it-do",
    "title": "Biodiversity tutorial",
    "section": "What is R and what can it do?",
    "text": "What is R and what can it do?\nR is a programming language that helps us work with large amounts of data.\n\nYou can import data from various sources, clean and process it, perform statistical analyses and generate reports or visualizations\nToday, we are going to create graphs from a big data set!\nFun Fact: R is like a fancy calculator\n\n\nYou can use R!\nThis tutorial lets you use R to work with data. Throughout the tutorial, there are gray boxes with a green “run code” button. These are called code chunks. You can type commands into these boxes and it will tell the computer to do things! Let’s try it out.\nPress the Green Play button on the top right of the code chunk.\n(the code chunk is the grey rectangular box below)\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nYou Try: Replace 4+3 with any math equation\nPress Green Play Button when done\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nContinue"
  },
  {
    "objectID": "tutorials/biodiversity_tutorial.html#sec-dataset",
    "href": "tutorials/biodiversity_tutorial.html#sec-dataset",
    "title": "Biodiversity tutorial",
    "section": "Data Set",
    "text": "Data Set\nWe are going to be using data from BioTIME, which is a database with a focus on biodiversity. They include free open-access data in an effort to make data more accessible and usable by anyone.\n\nWe are specifically looking at data on the Biodiversity of Terrestrial Plants and Invertebrates in the Temperate Coniferous Forest and in Tropical Forests.\n\nWe’ve pre-loaded a data set from the biotime data into this tutorial\n\nBiodiversity_Index is the name of the Data set.\n\nLets look at it!\n\n\n\n\n\n\nClick this to see our data!\n\n\n\n\n\n\nDatatableCode to create table (optional)\n\n\n\n\n\n\n\n\n\n\nThe kable() function opens a data set so you can look at it.\nPress Green play button to run the code\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nThis is A LOT of data!! It can be hard to understand by just looking at it. But luckily we can use R/the computer to better understand the data. That’s what we’ll do in the next sections.\nFirst, though, let’s see what we can observe just by looking at the data.\nStop and Think:\n\nQuestionHint\n\n\n\nHow many columns does this table have? How many rows?\n\n\n\n\n ✗148 columns and 11 rows\n\n\n ✗11 columns and 10 rows\n\n\n ✓11 columns and 148 rows\n\n\n ✗52 columns and 14 rows\n\n\n\n\n\n\n\nAt the top you’ll see the names of all the columns. Try scrolling all the way to the bottom of the data to see how many rows there are.\n\n\n\n\nContinue"
  },
  {
    "objectID": "tutorials/biodiversity_tutorial.html#choosing-our-columns",
    "href": "tutorials/biodiversity_tutorial.html#choosing-our-columns",
    "title": "Biodiversity tutorial",
    "section": "Choosing our columns",
    "text": "Choosing our columns\nHow can we narrow down all the data and variables? Let’s consider our goal, which is to graph biodiversity.\nWe will focus on biodiversity Index and the number of different species to help us understand biodiversity in this data set.\n\nStop and Think:\nDiscuss these questions with your neighbor:\n\nHow do biodiversity index and number of different species represent biodiversity in an area?\nWhat is the difference between biodiversity index and number of different species?\nWhy would we want to look at both biodiversity index and number of different species?\n\n\n\nContinue"
  },
  {
    "objectID": "tutorials/biodiversity_tutorial.html#creating-a-graph",
    "href": "tutorials/biodiversity_tutorial.html#creating-a-graph",
    "title": "Biodiversity tutorial",
    "section": "Creating a Graph",
    "text": "Creating a Graph\nWe have A LOT of data. It would be really hard to graph by hand. Luckily, we can use the computer (R) to graph it.\nOur goal is to create a graph that tracks the biodiversity of a specific location over time. We have two methods of measuring biodiversity: the number of species and the biodiversity index. We will also narrow down our data by choosing a specific biome and taxa.\n\nStop and Think\nBefore you make the graph, make a prediction about what it will look like:\n\nHow do you think biodiversity is changing over time?\n\nWill there be more or less biodiversity now compared to 50 years ago?\n\nWill biodiversity look different in different biomes and taxas? How?\n\n\n\nContinue"
  },
  {
    "objectID": "tutorials/biodiversity_tutorial.html#congratulations",
    "href": "tutorials/biodiversity_tutorial.html#congratulations",
    "title": "Biodiversity tutorial",
    "section": "Congratulations!",
    "text": "Congratulations!\nYou have created a data visualization from a big data set!\n\nStop and Think:\n\nWhat were some challenges?\nWhat have you learned about Data Science?\nWhat other kind of data would you like to look at in the future?\nWhat kind of graphs do you want to make or see more of?\n\n\nIf you want to learn more about the code we used to create the graph, you can click “continue” to go to the Code Challenge. This is OPTIONAL. Otherwise you are all done! Great work!!\n\n\n\nFrom.giphy.com\n\n\n\nContinue"
  },
  {
    "objectID": "tutorials/biodiversity_tutorial.html#sec-codechallenge",
    "href": "tutorials/biodiversity_tutorial.html#sec-codechallenge",
    "title": "Biodiversity tutorial",
    "section": "Code challenge",
    "text": "Code challenge\nIn this code challenge, we’ll have you directly edit the entire code chunk used to create your graph. Previously, you inputted your variables and we then put them into the graph code. So this time, you get to put your variables directly into the graph code and learn about what each command does!\nHere’s the code we used to create your graph. We’ll go over it in detail below.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nStep 1: Selecting a data set to graph\nLets look at line 1 : Biodiversity_Index |&gt;\n\nThis line is telling the computer which data set we want to create a graph from\nYou do not need to make any changes to this line.\n\n\nContinue"
  },
  {
    "objectID": "tutorials/biodiversity_tutorial.html#congratulations-1",
    "href": "tutorials/biodiversity_tutorial.html#congratulations-1",
    "title": "Biodiversity tutorial",
    "section": "Congratulations!",
    "text": "Congratulations!\nYou have created a data visualization from a big data set!\nNice work!\n\n\n\nfrom giphy.com"
  },
  {
    "objectID": "tutorials/climate_change_tutorial.html",
    "href": "tutorials/climate_change_tutorial.html",
    "title": "Climate Change Data Tutorial",
    "section": "",
    "text": "Please enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nhttps://physicsworld.com/a/solving-climate-change-with-jonathan-koomey-and-ian-monroe/\n\n\nWelcome to this data science tutorial! We’ll be using R to look at climate change data.\nR is a coding language that is often used to look at LARGE amounts of data. It can do all sorts of things including basic math!\nWant to try using R?\nIn the code box right below this, type in 6+3 and press the green play button:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nDo you see the answer 9 that popped out right under your code? Pretty cool!\nThe gray and white box with the green arrow and “run code” button is called a code chunk. You can type in “R commands” into that box and it will output the answer underneath the code chunk.\n\n\nToday we’ll be using R to look at climate data. We will be able to create graphs of different variables in our data, like carbon dioxide emissions and temperature.\nWe’ve preloaded a dataset into this tutorial. This was found\n\n\nLet’s start by taking a look at the data set. Press the green play button below and see what happens!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nYou should see 10 rows of data and a lot of random words. We won’t go into what all of it means, but here’s a quick overview:\n\nThe words on the top (country, year, iso_code, population, etc) are the different variables in our data set\nUnderneath those words are the type of variable, which we’ll ignore right now.\nBelow that, you’ll see some numbers and NA values. Those are different values for each variable.\n\nOur data is called co2Data. If you type co2Data into any code chunk, you’ll be able to see our data.\n\n\n\n\nWe can use R to do all sorts of things, including make graphs easily and quickly! In this tutorial we won’t be able to cover all the details of how to make a graph, but there’s lots of resources online you can find to learn more. We use something called ggplot to make graphs in this tutorial.\nFirst, lets make a graph that just looks at the worlds CO2 Emissions over time, this data goes all the way back to 1750!\nPress Run Code on the code chunk below!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\nWhat if we want to compare this to how the worlds temperature has changed over this same time? We have another dataset that contains temperature data. It tells us how different the temperature each year is from the average in 1900.\nIn the code chunk below type tempData and click “run code” to see the new data set.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\n\n\nhttps://geographicbook.com/temperature/\n\n\n\n\nYou should see 2 columns: one called Year and one called Anomaly. The Anomaly column tells us how different the temperature that year was from the average in 1900. This only shows us 10 years, but the data goes all the way to 2023! We can graph the data to visualize it better.\nLet’s graph this! Press “run code” and see what happens!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNow, what if we combine our co2 data and our temperature data?\nLets put these two data sets together matching up the years. Then, we can make a graph of temperature anomaly and co2 levels. Click “run code”.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nNow what if we ask where most of that CO2 we’re emitting comes from? We can do this with a bar graph that shows the data from the past few years. A bar graph is a little more complicated to make, so we’ve edited some of our data in the background to make it easier to graph with. Our new edited data is called co2DataFiltered.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nLet’s see what a graph looks like! Click “run code”.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nOptional: Open this if you want to learn more about how the code works\n\n\n\n\n\nGGPlot is an awesome tool you can use to create plots! There’s lots of tutorials online that I recommend checking out. But for now, here’s a brief explanation of how our code works. Below, I’ve copied and pasted the code from above, but this time there are explanations scattered throughout. The explanations start with a # (called a comment) and are gray. See if you can find out which line creates the title of the graph!\n\n#Tell R what data to use and what the x and y values are\nggplot(data=co2DataFiltered, mapping=aes(x=year_chr, y=value, fill=name))+\n  \n  #Select what kind of graph we're making\n  geom_col(position=\"dodge\") +\n  \n  #Label the graph to make it easy to read\n  labs(title=\"CO2 Production from Energy Vs. Other Sources\", x=\"Year\", y=\"CO2 In Tons\") +\n  \n  #add a legend to show what each color means \n  scale_fill_discrete(name=\"CO2 Source\", labels=c(\"CO2 from Energy\", \"All Other Sources of CO2\")) +\n  \n  #make it pretty :)\n  theme_light() \n\nWere you able to tell which line created the title??\nIf you want even more code to look at, keep reading! You can also feel free to skip to the next section called Scatter Plot Generator\nBelow, you can see the code that was used to filter our data and make it easier to use in a bar graph. This is code that we ran secretly in the background before you created the bar graph. It takes the co2Data and edits it to make it easier to graph with.\n\n#Creates new columns called \"co2_from_energy\" that includes co2 data from coal, gas, oil. \n#Then creates a column called \"co2_no_energy\" that is the rest of the co2 production\nco2DataBar&lt;-co2Data%&gt;%\n  group_by(year)%&gt;%\n  mutate(co2_from_energy=sum(coal_co2, gas_co2, oil_co2, na.rm=T))%&gt;%\n  mutate(co2_no_energy=co2-co2_from_energy)\n\n#Filter data to get just the columns we need and make it graphable\n#Tells R to only use \"year\", \"co2_no_energy\" and \"co2_from_energy\" in the graph. \nco2DataFiltered&lt;-co2DataBar%&gt;%select(year, co2_no_energy, co2_from_energy)%&gt;%\n  \n  #Chooses only years above 2019\n  filter(year&gt;=2019)%&gt;%\n  \n  #A few final adjustments to make the graph easier to use\n  pivot_longer(cols=c(co2_no_energy, co2_from_energy))%&gt;%\n  mutate(year_chr=as.character(year))\n\n\n\n\n\n\n\nNow you get to try creating your own plot! You will be able to choose any two variables and see how they relate to each other. If your questions haven’t been answered by the infographics and graphs you’ve already seen, take a look at the data and see what you can ask to try and learn more.\nFirst, decide which variable you want to learn about. You can choose any variable from co2Data. Here are some options:\n\npopulation\nyear\ncement_co2\nco2\nconsumption_co2\ncumulative_co2\nenergy_per_gdp\nland_use_change_co2\ngas_co2\ncoal_co2\ncement_co2\nland_use_change_co2\nmethane\ntemperature_change_from_co2\n\nChoose two of these variables that you want to plot against each other. Then, in the code chunk below, type them inside the quotes. Make sure you leave the quotes and just replace the red line. Also make sure you type the variable name exactly - in fact, you can just copy and paste from the list.\nThen click “run code”!\n\nCode editorExample\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nNow, let’s add titles and labels to your graph! Again, type your title between the quotation marks. Then click “run code”!\n\nCode editorExample\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nFinally, run this to see your scatter plot! Click “run code” and if something doesn’t look right, click through the “troubleshooting” tabs to see how to fix it.\n\nCode editorTroubleshooting: error messageTroubleshooting - points clustered at the bottom\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nDid you get an error message in red?\n\nIf the graph also displayed and looks right, don’t worry about the error message!\nIf the graph is not displaying, go back and make sure you ran all the code chunks previously where you defined the variables and labels.\n\nDid you put everything in quotes when you defined the variables and labels?\n\nYou don’t need to edit this code at all, just the code where you define variables and labels\nIf it still isn’t working or if you accidentally deleted something, you can refresh the page to restart.\n\n\n\nIf your x variable is year and your points are clustered at the bottom of your graph, this may be because it goes all the way back to 1750 and there wasn’t much change until much more recently.\nSo try running this code instead. It will display your graph from 2000 to 2020. Note: This code will only work if your x variable is year.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nNice work! Hopefully you enjoyed making your own graph with this data!\n\n\n\nfrom.giphy.com"
  },
  {
    "objectID": "tutorials/climate_change_tutorial.html#our-data",
    "href": "tutorials/climate_change_tutorial.html#our-data",
    "title": "Climate Change Data Tutorial",
    "section": "",
    "text": "Today we’ll be using R to look at climate data. We will be able to create graphs of different variables in our data, like carbon dioxide emissions and temperature.\nWe’ve preloaded a dataset into this tutorial. This was found\n\n\nLet’s start by taking a look at the data set. Press the green play button below and see what happens!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nYou should see 10 rows of data and a lot of random words. We won’t go into what all of it means, but here’s a quick overview:\n\nThe words on the top (country, year, iso_code, population, etc) are the different variables in our data set\nUnderneath those words are the type of variable, which we’ll ignore right now.\nBelow that, you’ll see some numbers and NA values. Those are different values for each variable.\n\nOur data is called co2Data. If you type co2Data into any code chunk, you’ll be able to see our data."
  },
  {
    "objectID": "tutorials/climate_change_tutorial.html#our-first-graph",
    "href": "tutorials/climate_change_tutorial.html#our-first-graph",
    "title": "Climate Change Data Tutorial",
    "section": "",
    "text": "We can use R to do all sorts of things, including make graphs easily and quickly! In this tutorial we won’t be able to cover all the details of how to make a graph, but there’s lots of resources online you can find to learn more. We use something called ggplot to make graphs in this tutorial.\nFirst, lets make a graph that just looks at the worlds CO2 Emissions over time, this data goes all the way back to 1750!\nPress Run Code on the code chunk below!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "tutorials/climate_change_tutorial.html#temperature-data",
    "href": "tutorials/climate_change_tutorial.html#temperature-data",
    "title": "Climate Change Data Tutorial",
    "section": "",
    "text": "What if we want to compare this to how the worlds temperature has changed over this same time? We have another dataset that contains temperature data. It tells us how different the temperature each year is from the average in 1900.\nIn the code chunk below type tempData and click “run code” to see the new data set.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "tutorials/climate_change_tutorial.html#co2-sources",
    "href": "tutorials/climate_change_tutorial.html#co2-sources",
    "title": "Climate Change Data Tutorial",
    "section": "",
    "text": "Now what if we ask where most of that CO2 we’re emitting comes from? We can do this with a bar graph that shows the data from the past few years. A bar graph is a little more complicated to make, so we’ve edited some of our data in the background to make it easier to graph with. Our new edited data is called co2DataFiltered.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nLet’s see what a graph looks like! Click “run code”.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nOptional: Open this if you want to learn more about how the code works\n\n\n\n\n\nGGPlot is an awesome tool you can use to create plots! There’s lots of tutorials online that I recommend checking out. But for now, here’s a brief explanation of how our code works. Below, I’ve copied and pasted the code from above, but this time there are explanations scattered throughout. The explanations start with a # (called a comment) and are gray. See if you can find out which line creates the title of the graph!\n\n#Tell R what data to use and what the x and y values are\nggplot(data=co2DataFiltered, mapping=aes(x=year_chr, y=value, fill=name))+\n  \n  #Select what kind of graph we're making\n  geom_col(position=\"dodge\") +\n  \n  #Label the graph to make it easy to read\n  labs(title=\"CO2 Production from Energy Vs. Other Sources\", x=\"Year\", y=\"CO2 In Tons\") +\n  \n  #add a legend to show what each color means \n  scale_fill_discrete(name=\"CO2 Source\", labels=c(\"CO2 from Energy\", \"All Other Sources of CO2\")) +\n  \n  #make it pretty :)\n  theme_light() \n\nWere you able to tell which line created the title??\nIf you want even more code to look at, keep reading! You can also feel free to skip to the next section called Scatter Plot Generator\nBelow, you can see the code that was used to filter our data and make it easier to use in a bar graph. This is code that we ran secretly in the background before you created the bar graph. It takes the co2Data and edits it to make it easier to graph with.\n\n#Creates new columns called \"co2_from_energy\" that includes co2 data from coal, gas, oil. \n#Then creates a column called \"co2_no_energy\" that is the rest of the co2 production\nco2DataBar&lt;-co2Data%&gt;%\n  group_by(year)%&gt;%\n  mutate(co2_from_energy=sum(coal_co2, gas_co2, oil_co2, na.rm=T))%&gt;%\n  mutate(co2_no_energy=co2-co2_from_energy)\n\n#Filter data to get just the columns we need and make it graphable\n#Tells R to only use \"year\", \"co2_no_energy\" and \"co2_from_energy\" in the graph. \nco2DataFiltered&lt;-co2DataBar%&gt;%select(year, co2_no_energy, co2_from_energy)%&gt;%\n  \n  #Chooses only years above 2019\n  filter(year&gt;=2019)%&gt;%\n  \n  #A few final adjustments to make the graph easier to use\n  pivot_longer(cols=c(co2_no_energy, co2_from_energy))%&gt;%\n  mutate(year_chr=as.character(year))"
  },
  {
    "objectID": "tutorials/climate_change_tutorial.html#scatter-plot-generator",
    "href": "tutorials/climate_change_tutorial.html#scatter-plot-generator",
    "title": "Climate Change Data Tutorial",
    "section": "",
    "text": "Now you get to try creating your own plot! You will be able to choose any two variables and see how they relate to each other. If your questions haven’t been answered by the infographics and graphs you’ve already seen, take a look at the data and see what you can ask to try and learn more.\nFirst, decide which variable you want to learn about. You can choose any variable from co2Data. Here are some options:\n\npopulation\nyear\ncement_co2\nco2\nconsumption_co2\ncumulative_co2\nenergy_per_gdp\nland_use_change_co2\ngas_co2\ncoal_co2\ncement_co2\nland_use_change_co2\nmethane\ntemperature_change_from_co2\n\nChoose two of these variables that you want to plot against each other. Then, in the code chunk below, type them inside the quotes. Make sure you leave the quotes and just replace the red line. Also make sure you type the variable name exactly - in fact, you can just copy and paste from the list.\nThen click “run code”!\n\nCode editorExample\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nNow, let’s add titles and labels to your graph! Again, type your title between the quotation marks. Then click “run code”!\n\nCode editorExample\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nFinally, run this to see your scatter plot! Click “run code” and if something doesn’t look right, click through the “troubleshooting” tabs to see how to fix it.\n\nCode editorTroubleshooting: error messageTroubleshooting - points clustered at the bottom\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nDid you get an error message in red?\n\nIf the graph also displayed and looks right, don’t worry about the error message!\nIf the graph is not displaying, go back and make sure you ran all the code chunks previously where you defined the variables and labels.\n\nDid you put everything in quotes when you defined the variables and labels?\n\nYou don’t need to edit this code at all, just the code where you define variables and labels\nIf it still isn’t working or if you accidentally deleted something, you can refresh the page to restart.\n\n\n\nIf your x variable is year and your points are clustered at the bottom of your graph, this may be because it goes all the way back to 1750 and there wasn’t much change until much more recently.\nSo try running this code instead. It will display your graph from 2000 to 2020. Note: This code will only work if your x variable is year.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nNice work! Hopefully you enjoyed making your own graph with this data!\n\n\n\nfrom.giphy.com"
  },
  {
    "objectID": "tutorials/sealevel_tutorial.html#introduction",
    "href": "tutorials/sealevel_tutorial.html#introduction",
    "title": "Sea Level tutorial",
    "section": "Introduction",
    "text": "Introduction\nWelcome to this lesson on changing sea levels. We’ll be looking at how the sea level is changing in different parts of the world. We’re going to use the computer to help us look at and understand data."
  },
  {
    "objectID": "tutorials/sealevel_tutorial.html#change-in-sea-level-since-1970",
    "href": "tutorials/sealevel_tutorial.html#change-in-sea-level-since-1970",
    "title": "Sea Level tutorial",
    "section": "Change in Sea Level Since 1970",
    "text": "Change in Sea Level Since 1970\nFirst, let’s take a look at this map showing how sea levels have changed since 1880. It shows the change in sea level compared to a baseline determined by the average sea level between 1993 and 2008.\n\n\n\nFrom https://www.climate.gov/news-features/understanding-climate/climate-change-global-sea-level\n\n\nAs we can see in the graph, there is an upwards trend of sea level rise.\nBut how do we know there is an upward trend? How do we know what the sea level is in the first place? Check out this video to learn more about how scientists measure the sea level.\nSo, scientists use water level gauges as well as satellites to measure the sea level at any given time. They write down all the numbers they measure and collect it. This collection of numbers is called data.\nAfter we have all that data (often called raw data), other scientists will analyze it and use it to create graphs. That’s what we’re going to do today! We’ll use the computer to code and analyze our data.\nClick “Continue” to learn about coding!\n\nContinue"
  },
  {
    "objectID": "tutorials/sealevel_tutorial.html#our-data",
    "href": "tutorials/sealevel_tutorial.html#our-data",
    "title": "Sea Level tutorial",
    "section": "Our data",
    "text": "Our data\nNow we’re going to use coding to learn more about sea level. As we learned, scientists use satellites and water level gauges to measure the sea level. They collect all those numbers and it becomes data.\nLet’s take a look at some sea level data for various coastal towns in the US. Click the blue box below to see the data.\n\n\n\n\n\n\nClick this to see our data!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere, we see the average change in Sea Level recorded in various locations from 1970-2021. It’s pretty hard to get any meaningful information from just that table of information - there’s so many numbers to look at. Luckily, we can use R to better understand it and make graphs.\nFirst, let’s try to understand a bit of what’s going on in the data table.\n\nAt the top of the table, there are bolded words. These are column titles and refer to the variable names.\nUnderneath the variable names, you’ll see individual entries for the data.\nAt the very bottom of the data table, you can click to different pages of data and see how many total entries there are.\n\n\nQuestion\n\n\n\nHow many data entries are there in the data?\n\n\n\n\n ✓318 data entries\n\n\n ✗99 data entries\n\n\n ✗10 data entries\n\n\n ✗400 data entries\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nThe Avg column shows the average change in sea level compared to WHAT????? year.\nWhat was the average sea level change in Astoria in 1974?\n\n\n\n\n ✗1.002\n\n\n ✗0.06667\n\n\n ✓0.03383\n\n\n ✗-0.0432\n\n\n\n\n\n\n\n\n\nContinue"
  },
  {
    "objectID": "tutorials/sealevel_tutorial.html#graphing-our-data",
    "href": "tutorials/sealevel_tutorial.html#graphing-our-data",
    "title": "Sea Level tutorial",
    "section": "Graphing our data",
    "text": "Graphing our data\nIt was probably difficult to tell how the sea level is changing overall. Luckily we can use coding to help us out. We can create different types of graphs through coding.\n\nAstoria Scatterplot\nLet’s start by focusing on Astoria and create a scatter plot. A scatter plot will plot a point for each individual data entry.\nPress run code\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWhat can you tell from this graph? Does it help you understand how sea level is changing in Astoria? What would you add to make it easier to tell how sea level is changing?\n\nContinue"
  },
  {
    "objectID": "tutorials/sealevel_tutorial.html#congratulations",
    "href": "tutorials/sealevel_tutorial.html#congratulations",
    "title": "Sea Level tutorial",
    "section": "Congratulations!!",
    "text": "Congratulations!!\nYou finished this tutorial on sea level! Nice work! Hopefully you learned a little bit about how we can use coding to create graphs.\nData science can take on many forms, from data collection to coding. This is just a little nibble of the possibilities data science has to offer; there is so much more to chew on!\n\n\n\n\n\nfrom.giphy.com\n\n\n\n\n\n\nfrom.giphy.com"
  },
  {
    "objectID": "resources/resources.html",
    "href": "resources/resources.html",
    "title": "Other Resources",
    "section": "",
    "text": "If you’d like to learn more about R coding and data science, here are some more resources you can refer to!"
  },
  {
    "objectID": "resources/resources.html#visualizations-and-interactive-graphs",
    "href": "resources/resources.html#visualizations-and-interactive-graphs",
    "title": "Other Resources",
    "section": "Visualizations and Interactive Graphs",
    "text": "Visualizations and Interactive Graphs\n\nEducational resources for teaching data visualizations\nPresentation with data visualization warm-ups\nNYT What’s Going on in this Graph Lessons\n\n\nVisualization Examples\nNASA Interactive Graphs - Vital Signs of the Planet\nVisual stories\nCarbon and Climate infographics\nData is Beautiful: 10 of the best data visualization examples from history and today\nTableu - Viz of the day\n\n\nWebsites for creating graphs (that don’t require coding)\nRaw Graphs\nCODAP"
  },
  {
    "objectID": "resources/resources.html#coding-with-r-a-data-science-coding-language",
    "href": "resources/resources.html#coding-with-r-a-data-science-coding-language",
    "title": "Other Resources",
    "section": "Coding with R (a data science coding language)",
    "text": "Coding with R (a data science coding language)\n\nCoding tutorial websites\nBiology Tutorials used in Lewis & Clark College intro to biology courses\nCheatsheet of Basic R commands\n\n\nTutorials that can be downloaded\nIntro to R Tutorial downloads and more information, Data in the Wild - This will take you to the “R files” page where you can download Intro to R tutorials called “Data in the Wild”, developed for an introductory data science course at Lewis & Clark College.\n\n\nOther websites to learn more about R coding\nmaybe some posit.cloud links??"
  },
  {
    "objectID": "resources/resources.html#other-data-science-websites",
    "href": "resources/resources.html#other-data-science-websites",
    "title": "Other Resources",
    "section": "Other data science websites",
    "text": "Other data science websites\nLewis & Clark college data science hub"
  },
  {
    "objectID": "lesson_plans/COR_lesson.html",
    "href": "lesson_plans/COR_lesson.html",
    "title": "Gravity and Mass on Different Planets",
    "section": "",
    "text": "Grade Level & Class type\n\nAppropriate for: Middle to high school students\nPreviously taught in: 8th grade\nUnit title: Astronomy Unit\nNumber of students: 30 per class\n\n\n\n\nfrom https://science.nasa.gov/solar-system/\n\n\n\nData Science in the Lesson\nWorking with raw data set: \n\nStudents collected and researched data sets for several reference points (distance from the sun, length of rotation and revolution, diameter, mass, etc) about 2 different planets or moons within our solar system.\n\nData visualization in lesson:\n\nData visualization was present in several forms- Students had analyzed several different types of graphical displays of data that related to the data they were collecting. They also created scale model drawings to compare the diameters and distance from the sun for one inner planet or moon and one outer planet or moon\n\nInteraction with computer coding:\n\nStudents were presented with computer code during the undergraduate student presentation.\n\n\n\nLesson materials\n\nStudent-Facing Materials\n\nClassroom presentation: Data for beginning of class\n\nDescription: these were used as warm ups for class (this is still a work in progress)\n\nData Science Presentation by Lewis & Clark undergraduate\n\nDescription: A presentation give by an undergraduate student to introduce data science and coding to students.\n\nComparing Surface Gravity to Mass over Surface Area of Planets\n\nDescription: Students prove that the mass of the planet and its surface area determines the gravitational force of the planet\n\n\n\n\nTeacher-Facing Materials\n\nScope and Scale presentation: Classroom presentation Day 31-37 solar system exploration scale and structure\n\nDescription: This is where the students researched and created their scale drawing models prior to the gravity vs. mass of planet lesson\n\nExample Part 2-Solar System Scale investigation including gravity extension\n\nDescription: This is the example of the project the students created for the scale comparisons\n\nOptional: .zip file with R code used to make graphs for this lesson\n\n\n\n\nReflection from teachers who have done this lesson\nWhat worked well? Why?\n\nThe parts where the students were engaged in data manipulation. The students remembered this information all the way to the end of the year.\n\nWhat do you believe are some of your students’ major takeaways from this lesson?\n\nData is used to support and defend science thinking.\n\nData is useful in helping us to determine how big or far away objects are in our universe.\n\nR could be really useful in large data sets\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "lesson_plans/lesson_links.html",
    "href": "lesson_plans/lesson_links.html",
    "title": "R Files for Data Science Lessons",
    "section": "",
    "text": "Here, you can find R code files for each lesson we have on this website. Each link below will download a .zip file containing the code and datasets for each lesson. We recommend you open the files using Rstudio desktop or posit.cloud (an online version of Rstudio).\nAdditionally, check out the tabs under “Lesson Plans” for more information and resources on how to teach these lessons!"
  },
  {
    "objectID": "lesson_plans/lesson_links.html#middle-school-lessons",
    "href": "lesson_plans/lesson_links.html#middle-school-lessons",
    "title": "R Files for Data Science Lessons",
    "section": "Middle School Lessons",
    "text": "Middle School Lessons\nSalmon Lesson Code .zip file\nAir Quality Lesson Code .zip file\nCOR Lesson code .zip file"
  },
  {
    "objectID": "lesson_plans/lesson_links.html#high-school-lessons",
    "href": "lesson_plans/lesson_links.html#high-school-lessons",
    "title": "R Files for Data Science Lessons",
    "section": "High School Lessons",
    "text": "High School Lessons\nAir Quality Lesson Code .zip file (same file as the middle school air quality lesson… wasn’t sure where to put it)\nBiodiversity Lesson Code .zip file\nClimate Change Lesson Code .zip file\nSea Levels Lesson Code .zip file"
  },
  {
    "objectID": "lesson_plans/lesson_links.html#sec-DITW",
    "href": "lesson_plans/lesson_links.html#sec-DITW",
    "title": "R Files for Data Science Lessons",
    "section": "Other downloadable tutorials",
    "text": "Other downloadable tutorials\nBelow are R tutorials developed for Lewis & Clark College’s Data in the Wild data science course. They cover basic data wrangling, graphing with ggplot and inferential statistics.\nTo use the tutorials, download the following .zip files and open in an R project on posit.cloud or R studio desktop. Each file contains modules which include a code-a-long, practice problems and homework.\nWe recommend you begin with the code-a-long and refer to the code-a-long key to determine which commands to type in the code-a-long. Then, proceed to the homework and practice problems for more practice.\nModule 1 - Basic data wrangling .zip file\nModule 2 - Plotting with ggplot .zip file\nModule 3 - Inferential Statistics .zip file"
  },
  {
    "objectID": "lesson_plans/Salmon_lesson_plan.html",
    "href": "lesson_plans/Salmon_lesson_plan.html",
    "title": "Lesson Plan - Analyzing and Interpreting Salmon Return at Bonneville Dam",
    "section": "",
    "text": "Grade Level & Class type\n\nAppropriate for: 6th-8th grade\nUnit title: Ecology Unit\nNumber of students: 20-25 per class\nTime: Three 45 minute lessons\n\n\n\nLesson Plan and Slides\n\nSalmon Crossing Lesson Plan - google doc\nSalmon Crossing Powerpoint Slides - .pptx file\nSalmon Lesson Coding Tutorial - webpage\n\n \n\n\n\nFrom https://thegorgeguide.com/bonneville-dam-visitor-center/\n\n\n\nCentral Focus/Big idea:\n\nAnalyze and interpret data about Chinook salmon return at Bonneville and Dalles dams to describe and explain changes in Chinook salmon population over time.\n\nContent Standards:\n\nNGSS Science and Engineering: Practice 4 Analyzing and Interpreting Data\nOpportunities to extend this lesson to a broader unit that covers other contents standards like: \n\nMS-ESS3-3. Apply scientific principles to design a method for monitoring and minimizing a human impact on the environment (classroom 2)\nMS-LS2-1. Analyze and interpret data to provide evidence for the effects of resource availability on organisms and populations of organisms in an ecosystem.\nMS-LS2-4. Construct an argument supported by empirical evidence that changes to physical or biological components of an ecosystem affect populations.\n\n\n\nLearning Objectives:\n\nStudents will practice analyzing and interpreting data and complete a pre assessment. \nStudents will understand how a larger data set was compiled into a data visualization.\nStudents will analyze patterns in salmon return rates.\nStudents will interpret patterns applying their research/background knowledge. \nStudents will complete an assessment to show proficiency in analyzing and interpreting data.\n\nExtension: \n\nStudents will research the salmon life cycle and impacts on salmon populations.  \nStudents will learn about dams and their role in salmon population changes.\nStudents will apply data analysis and interpretation skills to analyzing global temperature patterns and drought patterns in the West. \n\nAssessment: (What evidence of learning will you collect at the end of the lesson? How will you know what students have learned?)\n\nPre Assessment: Data Analysis and Interpretation\nFinal Assessment: Data Analysis and Interpretation: Salmon population patterns. Checklist and grading rubric included. \n\nDetailed Lesson Sequence\n\n\n\nPart\nDuration\nSummary\nSlides\nMaterials\n\n\n1\n5 min\nWARM UP\nGet ready for the day and analyze a graph from New York TImes, What’s Going on In this Graph: Egg Prices\n1-2\nSlides\n\n\n2\n10 min\nWHY SHOULD WE KNOW HOW TO MAKE SENSE OF DATA\nStudents work in partners to brainstorm reasons to be able to read graphs and data and come together for a whole group share out\n3\nChart paper and/or sticky notes\n\n\n3\n15 - 20 min\nINDEPENDENT PRE-ASSESSMENT\nStudents work independently on a pre-assessment to interpret changes in a two variable data visualization\n4-5\nPre-assessment\n\n\n4\n10 min\nREVIEW PRE-ASSESSMENT\nGo over the pre-assessment with students, solicit correct answers from students and correct where needed\nN/A\n\n\n\n\n\nEnd of day 1\n\n\n\nPart\nDuration\nSummary\nSlides\nMaterials\n\n\n5\n3 min\nINTRO TO CODING\nIntroduce the idea that computers take specific commands to generate something great! Data visualizations or graphs, in our case.\n6-7\n\n\n\n6\n8 min\nCODING ACTIVITY: STUDENTS AS COMPUTERS\nStudents will do a quick activity where they channel their inner programmer and give their classmates code/commands to move to a different spot in the room.\n8\nHandout: Coding Worksheet\n\n\n\n\n7\n10 min\nUSING CODE TO MAKE DATA VISUALIZATIONS\nWatch the video or demo how computer tools, like R, can help us to take really large data sets more easily to analyze by creating a data visualization.\n9\nVideo of how to code OR\nInteractive tutorial to model using code to create graphs\n\n\n8\n10 min\nESTABLISH BACKGROUND INFO ABOUT THE DATA\nProvide students with some background info about where the data they are about to look at comes from\n10-13\nBonneville Dam Fish Ladder September\nData source\nFish passage at Bonneville Dam\nBonneville Dam Fish Counter\n\n\n9\n10 min\nINTRODUCTION TO THE GRAPHS\nStudents are introduced to two graphs they will analyze on their assessment and are asked to begin interpreting changes. Student begin by just looking at the axis titles\n14-16\nWIS/WIM Graphs for Notebooks\n\n\n10\n5 min\nEXIT TICKET @ WHITEBOARDS\nStudents work in a small group to complete two short reflections questions\n17\n\n\n\n\n\n\nEnd of day 2\n\n\n\nPart\nDuration\nSummary\nSlides\nMaterials\n\n\n10\n40 min\nWORK TIME FOR ASSESSMENT\nStudents are given time to work on their assessment to assess the standard to analyze and interpret data.\n18-19\nAssessment: Data Analysis and Interpretation: Salmon population patterns\n\n\n\n\n\nEnd of day 3\n\nAdaptations/Modifications:\n\n\n\n\n\n\n\nEmergent Bilingual\nThe assessment could be given in different languages, sentence stems are provided for longer response\n\n\nTAG\nExtension activities provided\n\n\nSpecial Needs\nSentence stems are provided\n\n\n\n\nSupplemental Lesson Resources:\nConsider using these resources to support variations in teaching this lesson.\n\nBiodiversity and Environmental Impacts, Created by Emily Bosanquet\nGlobal Temperature Patterns and Data Analysis Assessment (NASA data), Created by Emily Bosanquet\nDrought and Its Impacts and Data Analysis Assessment (US Drought Monitor data), Created by Emily Bosanquet\nPre lesson on salmon life cycle and impacts to salmon population: Salmon Life Cycle and Impacts, Created by Emily Bosanquet\nImpacts of dams on our communityresource folder, created by Jenna Mobley\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Salmon Crossing Lesson Materials",
      "Lesson Plan - Salmon Return at Bonneville Dam"
    ]
  },
  {
    "objectID": "lesson_plans/Salmon_lesson.html",
    "href": "lesson_plans/Salmon_lesson.html",
    "title": "Lesson Overview - Analyzing and Interpreting Salmon Return at Bonneville Dam",
    "section": "",
    "text": "Grade Level & Class type\n\nAppropriate for: 6th-8th grade\nUnit title: Ecology Unit\nNumber of students: 20-25 per class\nTime: Three 45 minute lessons\n\n\n\nLesson Plan and Slides\n\nSalmon Crossing Lesson Plan - google doc\nSalmon Crossing Powerpoint Slides - .pptx file\nSalmon Lesson Coding Tutorial - webpage\n\n \n\n\n\nFrom https://thegorgeguide.com/bonneville-dam-visitor-center/\n\n\n\nLesson Title: Analyzing and Interpreting Salmon Return at Bonneville Dam\nLesson Description:\nStudents will explore how data on salmon return rates are collected and coded to produce a data graph. Students will analyze and interpret the graph to describe population changes in Chinook salmon species in the Columbia River.  Students will apply their knowledge of habitat needs to identify and explain why we see changes in populations over time. \nData Science in the Lesson:\nStudents identify how Chinook salmon are counted and recorded crossing the Bonneville Dam from 1937-2023. Students gain an understanding in how coding works using a game, in which they took the role of “computer” or “coder” and guided each other across the room; this modeled code commands that a computer understands.\nStudents are guided in understanding how the collection of raw data points are translated using code into a data visualization. They saw the raw data and noticed how hard it is to understand without a visualization, and from there were shown code being used to create a data visualization.\nStudents analyzed and interpreted the output graph data to describe and explain the patterns of salmon return rates at the Bonneville Dam. Students researched impacts to salmon to explain the patterns in the graph.\n\nLesson Materials\nNote: All these materials including lesson slides, pre-assessment and final assessment are embedded in the Lesson Plan.\n\nStudent-Facing Materials\n\nData Analysis Pre-Assesment\n\nDescription: Practice identifying patterns and how to describe patterns in data, identifying phenomena and variables. Practice analyzing and interpreting data using Monthly Average Price for a Dozen Eggs.\n\nData Analysis Final Assessment\n\nDescription: After the lesson examining how the data was collected and coded for data visualization, students complete a final assessment to show proficiency in analyzing and interpreting data.\n\nCoding Activity Worksheet\n\nDescription: This half page is for each student to practice giving their partner “code” to navigate them to a different place in the room\n\nWIS/WIM Graphs for Notebook\n\nDescription: This half page is for each student to write their interpretation of what they see and what it means on the graph\n\nCoding Demonstration video OR Coding Interactive Tutorial\n\nDescription of video: The video provides an overview of how we can use code to synthesize large amounts of data from the Bonneville Dam and create the graphs used in this lesson.\nDescription of tutorial: The tutorial also provides an overview of creating data visualizations in an interactive format where students can attempt some basic coding.\n\n\n\n\nTeacher-Facing Materials\n\nSalmon School Lesson Plan\n\nA three day lesson sequence that could be used to support \n\nSalmon School Powerpoint Slides\nOptional: R code .zip file used to create the graphs\n\n\n\n\nReflection from teachers who have done this lesson\nWhat worked well? Why?\n\nTeacher A: The data (Chinook salmon return rates at the Bonneville Dam on the Columbia from 1937-2023) fit onto the unit content, exploring ecology and how and why populations of species change over time. We raised Chinook salmon in the classroom so we had a real reference for the students.\nTeacher B: Students were engaged in the coding activity. Everyone was up and moving and worked well together to make the moment adjustments for time of day considerations (more structure for later in the day!) and opportunities for pair-share before whole class adjustments.\n\nWhat changes would you make to future iterations? Why?\n\nTeacher A: In addition to the video that demonstrates coding, I would include the coding game where students direct each other across the classroom. Coding was an abstract idea and I did not have enough time to develop a deeper understanding of this tool. It is not a requirement of the curriculum I teach. My focus was on showing students how humans are behind the data, collecting specific data using tools (in this case identifying species and counting them) over many decades to produce raw data tables. They saw the coding operate to create a graph, but the process of making selections on the variables, how to code, and exploring the raw data table itself was outside the scope of the lesson. My focus was on developing data literacy skills in analyzing and interpreting the graph.\nTeacher B: This lesson really kind of stood alone in the larger unit I taught. This was not at all their first exposure to data science over the year so I think that was okay… but it made it feel like data science was a bit peripheral. When I taught the unit, I really just did the day 2 sequence. I would teach is more closely aligned to the attached lesson plan in the future.\n\nWhat do you believe are some of your students’ major takeaways from this lesson?\n\nTeacher A: Students created a file folder for this mini unit and formally showcased their learning to peers and received peer feedback. They described and explained the return patterns in the data and used the extension lesson on linking impacts to salmon using global temperature data and drought patterns to deepen their thinking on impacts to salmon populations.\nTeacher B: I believe students better understood a bit of the process involved in data visualization creation. I think they also saw some ways that coding can be connected to science. Students also better understood the variability in salmon populations over time.\n\nStudent data science takeaways\n\nStudents watched a video which demonstrated how coding can be used to synthesize large amounts of data into a graph. Students were able to recognize how real humans are behind the compilation and creation of data and data visualizations. Students observed videos of salmon crossing the fish ladder at Bonneville and humans counting the species as they crossed to record the data points of return rates. The video showed students the source of this raw data and demonstrated how it was coded into a graphical visualization, emphasizing how huge and hard to understand it was. Students worked in groups on the classroom white boards to describe how the graph was created. Students identified how code was used to organize the data and create a visualization, which could be more easily interpreted to describe and explain patterns and predict future trends. Students were provided with the graphical output to analyze and interpret patterns as an assessment in order to demonstrate proficiency in analyzing and interpreting data to describe/explain a phenomena.\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Salmon Crossing Lesson Materials",
      "Lesson Overview - Salmon Return at Bonneville Dam"
    ]
  },
  {
    "objectID": "lesson_plans/AQI_lessons/AQI_middle_lesson_plan.html",
    "href": "lesson_plans/AQI_lessons/AQI_middle_lesson_plan.html",
    "title": "AQI Lesson Plan - Middle School",
    "section": "",
    "text": "Grade Level & Class type\n\nAppropriate for: 5th-9th grade\nUnit: Climate Change\nNumber of students: 20-25 per class\nTime: Three 40 minute lessons\n\n\n\nLesson Plan and Slides\n\nAQI Lesson Plan - google doc\nAQI Powerpoint Slides\nAQI Lesson Coding Tutorial\n\n \n\n\n\n\n\n\nCentral Focus: Understanding air quality data and what factors affect air quality.\nContent Standards:\n\nMS-ESS3-3 - Apply scientific principles to design a method for monitoring and minimizing a human impact on the environment.\nHS-ESS2-2 - Analyze geoscience data to make the claim that one change to Earth’s surface can create feedbacks that cause changes to other Earth systems.\n\nLearning Objectives:\n\nI can explain what environmental factors impact air quality (with emphasis on the PM2.5 measurement) and its significance for people and communities.\nI can read a graph and use a graph to answer questions about changes in air quality in Portland over time.\nI can describe the process of using a large data set to create graphs to help answer specific questions about an environmental issue.\n\n\n\nAssessment: (What evidence of learning will you collect at the end of the lesson? How will you know what students have learned?)\n\nStudents will use their notes to answer, “What factors affect air quality and how has air quality changed in our area since 2000?” in a graphic organizer and then write an argumentative letter using evidence to support their claim about an issue that will impact their local air quality. For an extension students can answer, “What other information would you want to find to help you answer another question?” Give 2 or 3 examples.\n\n\n\n\n\n\n\n\n\n\nVocabulary\nSupport:\n\n\n\n\nAQI\nPM 2.5 and PM 10\nFactors\nScatter Plot\nCentral Tendency\nVariability\nVariables\nGuided notes with definitions and applications.\n\n\n\n\nDetailed Lesson Sequence\nSee slides for a presentation to show your class.\nDay 1\n\n\n\nTime\nThe teacher will…\nThe student will…\nMaterials/Resources\n\n\n5 mins\n\n\nShow the video of KMart Fire or local fire and ask students to remember what they experienced during this time or what the problems are in the video. Prompt them to discuss with their group and write down their answer.\nWarm up: Students will discuss their response to the prompt: “What do you remember from when the skies were red/ the KMart building burned?” Or “What problems were brought up in the video?”\nNotebook/ pencil\nKMart Fire Video\n\n\n\n\n30 mins\nDemonstrate how to use the Atmotube to measure air quality. Light a match next to the device to show students what happens to the number shown. Explain how students will be expected to collect data. Gather class data.\nWatch the demonstration and then use the Atmotube to measure and record the air quality with the following factors: blow air, fan, air purifier, matches, perfume. Students will test factors 3 times each. Students who are finished can start to gather class data and look for patterns.\nAtmotubes - borrow  or buy AQI Tool\nLocal Air Quality program may have resources\nSmart phone or device with apps\nMatches, Perfume, Clorox wipes, etc.\nAtmotube Instructions slide\nAtmotube lab doc\n\n\n5 mins\n\n\nPrompt students to clean up and then answer the exit ticket question on a piece of paper to turn in.\nExit ticket: Students will clean up and write their answer to the question, “What factor affected the air quality the most?”\nSmall piece of paper\nPencil\nExit ticket\n\n\n\n\n\nDay 2\n\n\n\nTime\nThe teacher will…\nThe student will…\nMaterials/Resources\n\n\n\n\n10 mins\nAsk students to brainstorm on their own first and then with their group factors that might affect air quality outside. (Factors: cars, traffic, factories, weather, fires, cows, landfills, garbage, water treatment)\nShow the tile plot graphs of Portland and then LA. Ask them: “What patterns do you notice?”\nStudents will think on their own first and then with their group  write down factors that might affect air quality outside. Then they will look at the graphs and discuss what patterns they notice. (Maybe July 4th line or March 2020) Each group can write down what they notice and wonder on a whiteboard if available.\nSticky notes\nPencils\nEPA AQI Data\nWhite boards\nWhite board markers\n\n\n10 mins\nDemonstrate scrolling through the large EPA AQI data set. Then show how the preset code creates the green and yellow graphs to show the categories of air quality. Ask students, “Does this graph show the story that you were expecting to see?”\nStudents watch the demo and discuss with their group what they heard and what they wonder. Write down quick notes and sketches of the graphs. Students will answer the question, “Does this graph show the story that you were expecting to see?” with their group.\nEPA AQI Data\nUpdated AQI data\nInteractive code demo\n\n\n\n20 mins\n\n\nPlay the video about 2.5 PM and ask students to think about why we care about air quality. Prompt students to read the Oregonian article AQI is off the charts or the Guardian article about Amazon truck warehouses and highlight words that are new. Then guide students through notes writing down the definitions of PM 2.5, AQI, sources of PM, who it affects. Prompt exit ticket.\nStudents will watch the video and discuss why we care about air quality. They will read the Oregonian article and highlight new words. Next they will follow guided notes to write down the definitions of key vocabulary. Then students will answer the question, “Why do we care about PM 2.5?”\n1 min video about 2.5 PM\nOregonian article AQI is off the charts\nGuardian article about Amazon truck warehouses\nHighlighter\nSmall piece of paper\nPencil\nAQI Exit Ticket\n\n\n\n\n\nDay 3\n\n\n\nTime\nThe teacher will…\nThe student will…\nMaterials/Resources\n\n\n10 mins\nShow the Spiderman video and ask students to practice writing a short CER making a claim about the question, “Should Spiderman get a driver’s license?” Prompt students to write a CER based on evidence from the video and go over their ideas as a class.\nWatch the Spiderman video and write a practice CER based on the question, “Should Spiderman get a driver’s license?” Students will participate in a class discussion about evidence that can support their claim.\nNotebook\nPencil\nSpiderman Video\n\n\n30 mins\nExplain the assessment as a graphic organizer with spaces to use evidence from the graphs and articles to answer the question, “What factors affect air quality and how has air quality changed in our area since 2000?” or “Should the ProLogis company build a truck warehouse across the street from a school?” We will use this info to write an argumentative letter to a company, politician, or someone the students choose. Prompt students with an extension question.\nStudents will use their notes to answer, “What factors affect air quality and how has air quality changed in our area since 2000?” in a graphic organizer and then write an argumentative letter. For an extension student can answer,\n“What other information would you want to find to help you answer another question?”\nGive 2 or 3 examples.\nAir Quality CER graphic organizer\nLined paper\nEnvelopes\n\n\n\n\n\nAdaptations/Modifications:\n\n\n\n\n\n\n\n\n\nEmergent Bilingual\nAll materials will be printed in home language and students will be paired up with a student who speaks their home language (if possible). Images and videos with subtitles will be used to help understanding. Sentence starters and word banks will be provided for the writing and speaking parts.\n\n\nTAG\nStudents may use chromebooks to code their own graphs and they may also design a lab procedure to test different variables. There will be extension questions to prompt students to think about what other information they would want to find in order to answer another question.\n\n\nSpecial Needs\nA graphic organizer will be provided and students may work with me in a small group to get started. Sentence starters and word banks will be provided for the writing and speaking parts.\n\n\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Middle School",
      "AQI Lesson Plan - Middle School"
    ]
  },
  {
    "objectID": "lesson_plans/AQI_lessons/AQI_high_lesson_plan.html",
    "href": "lesson_plans/AQI_lessons/AQI_high_lesson_plan.html",
    "title": "AQI Lesson Plan - High School",
    "section": "",
    "text": "Grade Level & Class type\n\nAppropriate for: 10th-12th grade\nSubject: environmental science or biology\nNumber of students: 30 per class\nTime: 3-4 90 minute lessons\n\n\n\nLesson Plan and Tutorial\n\nAQI Lesson Plan - google doc\nAQI Lesson Coding Tutorial\n\n \n\n\n\n\n\n\nCentral Focus/Big idea: What are the factors of air quality and what impacts air quality?\n\nContent Standards:\n\nHS-ESS2-2 - Analyze geoscience data to make the claim that one change to Earth’s surface can create feedbacks that cause changes to other Earth systems.\n\n\nLearning Objectives:\n\nSWBAT describe the factors that determine air quality, including their causes and the effects on people and the environment. \nSWBAT formulate questions about  large regional data sets.\nSWBAT explain how Data Science allows us to manipulate a large data set to answer our specific scientific questions, specifically in our own community.\nSWBAT pose a question related to AQI, develop a lab procedure, carry out the lab, and report on their findings. \n\n\nAssessment: (What evidence of learning will you collect at the end of the lesson? How will you know what students have learned?)\n\nSummative Assessment: Lab report with CER. Students describe their self-designed lab, data collection procedures, and results. The report is written in a Claim, Evidence, Reasoning format.\nFormative Assessments: Notes from gallery walk about AQI factors, group and class discussions about AQI factors, group and class discussions about regional AQI data, group and class discussions about data science process.\n\n\nDetailed Lesson Sequence\nPART 1: Introduction to Air Quality\nTiming: 90 minutes, could be split into 2 lessons\n\n\n\nTime\nThe teacher will…\nThe student will…\nMaterials/Resources\n\n\n\n\n10 min\n- Introduce idea of AQI\n- Ask students to discuss questions\n- Record student ideas on board\n\n\n- Discuss questions in groups\n- Share out ideas and personal experiences\n- Factors of Air Quality Slides\n\n\n\n\n20-30 min\n- Split students into groups for the factors\n- Assign a slide to each group or give access to whole slideshow for students to edit\n- Circulate during student work time\n[Break here for 45 minute classes]\n- Form groups\n\n\n- Use links on slide to research AQI factor in groups\n\n\n\n\n\n5 min\n\n\n- Determine a rotation pattern and draw on the board\n- Set a timer for group rotations\n- Ask students to discuss big ideas and decide who will stay to teach other groups\n- Decide who will stay and present ideas\n- Decide who will rotate around to other groups\n\n\n\n30 min\n\n\n- Circulate during rotations\n- Announce when it’s time to rotate\n- Travel to other groups based on rotation pattern\n- Teach arriving groups\n- Take notes on document during rotations (post in Google Classroom or make paper copy)\n- AQI Factors Graphic Organizer\n\n\n10-15 min\n\n\n- Direct students to return to original groups and share notes with members who stayed to teach\n- Return to original groups and share notes with members who stayed to teach\n\n\n\n\n\nPART 2: Using Data Science To Explore AQI Data\nTiming: 90 minutes, could be split into 2 lessons\n\n\n\nTime\nThe teacher will…\nThe student will…\nMaterials/Resources\n\n\n\n\n10 min\n- Review from last time\n- Ask student to open graphic organizer from last class and be ready share ideas\n- Record student review ideas on board or slides\n\n\n- Open graphic organizer and review\n\n\n- Share ideas from research\n- Using Data Science to Explore AQI Data Slides\n\n\n5-10 min\n\n\n- Ask students what is causing the air quality they see in the images (replace with relevant regional images for your location)\n- Dive into PM2.5 info\n- Share ideas\n\n\n\n\n\n\n20-30 min\n- Pass out AQI Tile Plots for Portland (or your area)\n- Ask students to examine the data\n- Ask students what they notice and wonder\n\n\n- Pass out AQI Tile Plots for Los Angeles\n- Ask students to examine the data\n- Ask students what they notice and wonder\n\n\n- Ask for student questions\n\n\n\n- Examine data\n- Share ideas\n\n\n\n\n\n- Examine data\n- Share ideas\n\n\n\n- Share questions\n- AQI Tile Plots (color copies or post on Google Classroom so students can see colors)\n- EPA Air Data Multiyear Tile Plot (to create regional tile plots for your area)\n\n\n20-30 min\n\n\n- Introduce idea of Data Science\n- Star Wars silly example\n- Process of taking large data set and using R coding to answer a specific scientific question\n- Listen to information on Data Science\n- Watch demonstration of Star Wars example\n- Watch demonstration of AQI data manipulation\n- AQI data science interactive tutorial\n\n\n20 min\n- Display Wrapping Up questions and facilitate class discussion (or use questions to create exit ticket or other assessment)\n- Answer questions, share ideas, participate in class discussion\n\n\n\n\n\nExtra time\n- Give students link to EPA Data or use Part 2 of interactive tutorial\n- Ask the to explore a city they have visited or want to visit\n- Explore EPA data\n- Part 2: AQI Interactive tutorial\n\n\n\n\nPART 3: Air Quality Exploration Lab\nTiming: Two-three 90 minute lessons\n\n\n\nTime\nThe teacher will…\nThe student will…\nMaterials/Resources\n\n\n\n\n10-15 min\n- Review what we have done\n- Introduce Atmotubes\n- Help students download app and connect to device\n\n\n\n- Download Atmotube app and connect to devices\n- Air Quality Index Exploration Lab Slides\n- 1 Atmotube for each group\n- Device that can download app and connect by Bluetooth\n\n\n\n\n20-30 min\n- Direct students to Atmotube Exploration Graphic Organizer and ask them to play around with Atmotubes to answer the questions\n- Circulate as students are working to troubleshoot\n- Open graphic organizer and explore the features of Atmotubes\n- Go to various stations around the room to test out how they change air quality\n- Record ideas on graphic organizer\n- Stations with: candle/matches, bunsen burner, cleaning spray, clorox bleach wipes, other ideas from you or students\n- Atmotube Exploration Graphic Organizer\n\n\n\n\n10 min\n- Bring students back together\n- Debrief with students about experience\n\n\n- Share out what they noticed and what questions they have about sir quality\n\n\n\n\n\n30 min  min\n\n\n\n- Tell students about the next steps for Air Quality Exploration Lab\n- Ask students to form groups and begin brainstorming question and procedure\n\n\n\n- Form groups, formulate question and propose procedure\n- Answer question #1 on the Formative assignment (proposal and procedure)\n- Template Air Quality Lab (Formative link)\n- Template for Air Quality Lab (Word doc)\n\n\nEnd of Day 1\nBefore next class\n- Check procedures and give approval\n\n\n\n\n\n\n90-180 minutes\n- Check procedures and give approval\n- Circulate and facilitate\n- Finish writing procedure and getting approval from teacher\n- Conduct experiment and collect data\n- Create graphs and write report\n- CER Writing Sentence Frames\n\n\n\n\n\nAdaptations/Modifications:\n\n\n\n\n\n\n\nEmergent Bilingual\nImages and videos with subtitles will be used to help understanding. Sentence starters will be provided for the writing and speaking parts.\n\n\n\n\n\nTAG\nStudents will design a lab procedure to test different variables, offering opportunities to add complexity. There will be opportunities for extension exploration and questions to prompt students to think about what other information they would want to find in order to answer another question.\n\n\nSpecial Needs\nSentence starters and word banks will be provided for the writing and speaking parts.\n\n\n\n\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "High School",
      "AQI Lesson Plan - High School"
    ]
  },
  {
    "objectID": "lesson_plans/AQI_lessons/AQI_high_overview.html",
    "href": "lesson_plans/AQI_lessons/AQI_high_overview.html",
    "title": "AQI Lesson Overview - High School",
    "section": "",
    "text": "Grade Level & Class type\n\nAppropriate for: 10th-12th grade\nSubject: environmental science or biology\nNumber of students: 30 per class\nTime: 3-4 90 minute lessons\n\n\n\nLesson Plan and Tutorial\n\nAQI Lesson Plan - google doc\nAQI Lesson Coding Tutorial\n\n \n\n\n\n\n\n\nLesson Title: Air Quality Index\nLesson Description:\nThe goal of the lesson was to demonstrate air quality trends in different regional settings and examine how environmental factors can impact the Air Quality Index (AQI) using data science. Students had exposure to R, a data visualization language, to show them how to take large data sets and turn them into graphs that are easier to understand. We showed them how Posit Cloud is used through coding in a whole group demonstration, then used EPA data to compare air quality trends between Portland and Los Angeles in the last two decades. In groups, they looked at handouts of the EPA Tile Plots to practice searching for patterns and trends and critically analyze mistakes of data visualization. Finally, students used AQI data to write argumentative letters to support claims made about community impacts on air quality.\nData Science in the Lesson:\nWorking with raw data:\n\nStudents did not work with the raw data. They looked at the large data set and watched a demonstration of coding to analyze data.\n\nData visualization:\n\nYes, students compared the EPA scatterplots of AQI in Portland vs LA. The student takeaways were searching for patterns and trends, comparing regional data sets, and critically analyzing mistakes of data visualization.\n\nCoding involved:\n\nStudents saw computer code. They observed a demonstration of R/Positcloud coding. The demonstration included a preliminary example of sorting Star Wars characters into categories to demonstrate how to manipulate a large data set. Then students watched a demonstration of the process of uploading a large AQI data set and using it to create graphs to answer relevant questions.\n\nNote: this lesson was originally taught with the assistance of undergraduate students who demonstrated coding. If you have not coded before and would like to incorporate basic data science/coding into your lesson, refer to the online AQI tutorial for an easy walk-through you can use to demonstrate data science in your classroom!\n\n\n\nLesson Materials\n\nStudent-Facing Materials\n\nFactors of Air Quality Slides\n\nDescription: Slides to introduce the factors that go into the AQI measurement. Includes blank slides with links to resources for students to research factors and instructions for gallery walk.\n\nAQI Factors Graphic Organizer\n\nDescription: Graphic organizer for students to collect notes during gallery walk.\n\nUsing Data Science to Explore AQI Data Slides\n\nDescription: Slides to introduce regional AQI data, places to collect notes for notice and wonder questions, and student-generated questions. Slides to introduce and demonstrate the ideas of Data Science and how we use coding to narrow down a large data set to answer a specific scientific question. Wrap-up discussion questions about Data Science. Extension activity with link to EPA data.\n\nUsing Data Science to Explore AQI Data Interactive Tutorial\n\nDescription: Online tutorial which provides a walk-through on how to deal with large amounts of data and create air quality graphs.\nIn Part 2 AQI Tutorial, there is an option for students to create custom air quality graphs of any location.\n\nAQI Tile Plots\n\nDescription: Plots of EPA data for Portland, OR and Los Angeles, CA for 2000-2023. Should be printed in color fo students to examine in groups or posted online so they can see the colors.\n\nAir Quality Index Exploration Lab Slides\n\nDescription: Slides with information about Atmotube exploration and basic instructions to prepare students to formulate their own testable science question, write a procedure, perform the experiment, and write a report (CER).\n\nAtmotube Exploration Graphic Organizer\n\nDescription: Graphic organizer to direct students in exploration of Atmotubes. Meant to help familiarize them with the equipment before they perform a lab.\n\nCER Writing Sentence Frames\n\nDescription: Sentence starters for CER (Claim, Evidence, and Reasoning) writing.\n\n[Template] Air Quality Lab(Formative Link)\n\nDescription: This link will ask you to make a copy in Formative for the Air Quality Exploration Lab\n\n[Template] Air Quality Lab\n\nDescription: Template for Air Quality Exploration Lab report\n\n\n\n\nTeacher-Facing Materials\n\nAQI Lesson Plan\nOptional: R code .zip file used to create the graphs OR Interactive online coding tutorial\n\n\n\n\nReflection from teachers who have done this lesson\nWhat worked well? Why?\n\nThe data discussions around the visualizations went really well. Students were engaged and interested in the patterns and anomalies in air quality in these regions.\n\nWhat do you feel was missing?\n\nWell, coding is not very engaging to watch or look at if you are a high school student with no experience in coding. The R program is really cool, and it would be great to give students a taste of coding to try on their own (with R or a different language) so they might be able to understand what they are looking at when we start talking about pipes and filters and plots and visualizations.\nI would rethink the way we presented the coding part. I would want to use a more interactive lesson with movement and visuals to demonstrate how coding helped us answer the questions we posed from the large data set. It would have been great to have the coding be part of the process that the students were part of as well. It would be ideal to have them ask questions that we could answer on the fly with the coding and go step-by-step, but that would be difficult to do quickly.\n\nNote: we have updated the lesson since this feedback, and now there is an opportunity for students to make the graphs themselves in an interactive format. See the online AQI coding tutorial.\nAlso check out this coding activity which incorporates moving around the classroom and pretending to be computers in order to introduce coding to students.\n\n\nWhat changes would you make to future iterations? Why?\n\nI would want to add in the things I mentioned above. One class period is probably not enough for all of the cool things we could do, but it was a great experience.\n\nWhat do you believe are some of your students’ major takeaways from this lesson?\n\nMy students learned about how useful large data sets can be when trying to answer a long-term scientific question. They learned some basics of Data Science and the process of using the large data set to answer a question. They looked at patterns and analyzed regional data to compare the environmental conditions in two different locations.\n\n\n\n\n\n Back to top",
    "crumbs": [
      "High School",
      "AQI Lesson Overview - High School"
    ]
  },
  {
    "objectID": "lesson_plans/AQI_lessons/AQI_lesson.html",
    "href": "lesson_plans/AQI_lessons/AQI_lesson.html",
    "title": "Air Quality Lesson Landing Page",
    "section": "",
    "text": "Welcome to the landing page for air quality lessons! There are 2 different lessons, one for middle school and one for high school. Please use the left sidebar to navigate to the lesson you’d like to use.\nAdditionally, you can incorporate the air quality coding tutorials into both lessons. They provide a walk-through of how to work with large amounts of data and create graphs. Part 2 has some challenge options better suited for high school students.\nA note about location: These lessons were originally taught in Portland, OR. If. you are teaching them elsewhere, check out Part 2 of AQI coding tutorial which gives students options to customize their own air quality graphs for any location.\n\nLesson Links:\nMiddle School:\n\nAQI Lesson Overview\nAQI Detailed Lesson Plan\n\nHigh School:\n\nAQI Lesson Overview\nAQI Detailed Lesson Plan\n\nOther:\n\nAQI coding tutorials\nAir Quality Lesson Code .zip file\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Air Quality Lessons Landing Page"
    ]
  },
  {
    "objectID": "lesson_plans/AQI_lessons/AQI_middle_overview.html",
    "href": "lesson_plans/AQI_lessons/AQI_middle_overview.html",
    "title": "AQI Lesson Overview - Middle School",
    "section": "",
    "text": "Grade Level & Class type\n\nAppropriate for: 5th-9th grade\nUnit: Climate Change\nNumber of students: 20-25 per class\nTime: Three 40 minute lessons\n\n\n\nLesson Plan and Slides\n\nAQI Lesson Plan - google doc\nAQI Powerpoint Slides\nAQI Lesson Coding Tutorial\n\n \n\n\n\n\n\n\nLesson Title: Air Quality Index\nLesson Description:\nThe goal of the lesson was to demonstrate air quality trends in different regional settings and examine how environmental factors can impact the Air Quality Index (AQI) using data science. Students had exposure to R, a data visualization language, to show them how to take large data sets and turn them into graphs that are easier to understand. We showed them how Posit Cloud is used through coding in a whole group demonstration, then used EPA data to compare air quality trends between Portland and Los Angeles in the last two decades. In groups, they looked at handouts of the EPA Tile Plots to practice searching for patterns and trends and critically analyze mistakes of data visualization. Finally, students used AQI data to write argumentative letters to support claims made about community impacts on air quality.\nData Science in the Lesson:\nWorking with raw data:\n\nStudents did not work with the raw data. They looked at the large data set and watched a demonstration of coding to analyze data.\n\nData visualization:\n\nYes, students compared the EPA scatterplots of AQI in Portland vs LA. The student takeaways were searching for patterns and trends, comparing regional data sets, and critically analyzing mistakes of data visualization.\n\nCoding involved:\n\nStudents saw computer code. They observed a demonstration of R/Positcloud coding. The demonstration included a preliminary example of sorting Star Wars characters into categories to demonstrate how to manipulate a large data set. Then students watched a demonstration of the process of uploading a large AQI data set and using it to create graphs to answer relevant questions.\n\nNote: this lesson was originally taught with the assistance of undergraduate students who demonstrated coding. If you have not coded before and would like to incorporate basic data science/coding into your lesson, refer to the online AQI tutorial for an easy walk-through you can use to demonstrate data science in your classroom!\n\n\n\nLesson Materials\n\nStudent-Facing Materials\n\nAQI Middle School Lesson Slides\n\nDescription: Slides used to teach the AQI lesson over 4 days to middle school students.\n\nAQI Atmotube Instructions Slide\n\nDescription: This slide can be printed out for each group of students to follow the directions for connecting to and using the Atmotubes.\n\nAQI Atmotube Lab Doc\n\nDescription: Document meant to print out and cut into sections so that each student can write down the data while they are testing the Atmotubes with different factors.\n\nAQI Atmotube Exit Ticket\n\nDescription: Document meant to print out and cut into sections so that each student can write down their reflection about the Atmotube lab.\n\nEPA AQI Graph for Portland and Los Angeles\n\nDescription: Image of the EPA AQI scatterplot showing the air quality in Portland, OR and Los Angeles, CA from January 2000 to July 2023 coded with colors for different categories.\n\nOnline AQI Graphs Coding Tutorial\n\nDescription: Online tutorial which provides a walk-through on how to deal with large amounts of data and create air quality graphs.\nIn Part 2 AQI Tutorial, there is an option for students to create custom air quality graphs of any location.\n\nAQI Graphs Exit Ticket\n\nDescription: Document meant to print out and cut into sections so that each student can write down their reflection about AQI.\n\nAQI Amazon's Warehouse Article\n\nDescription: Article students can read to understand the context for the impact that a truck warehouse has on a local community. Students can use evidence from this article to support their claim for the argumentative letter.\n\nAQI - Portland's Air Quality is Off the Charts Article\n\nDescription: Article students can read to understand how smoke impacts the air quality in a local community. Students can use evidence from this article to support their claim for the argumentative letter.\n\nAir Quality CER Graphic Organizer\n\nDescription: A graphic organizer to print out for students to use to make a claim about a local issue, support the claim with evidence, and include reasoning to explain how the evidence supports the claim. There is a rubric for how the CER will be scored on a 1- 4 scale.\n\nAir Quality CER Digital Version\n\nDescription: A digital version of the graphic organizer for students to use to make a claim about a local issue, support the claim with evidence, and include reasoning to explain how the evidence supports the claim. There is a rubric for how the CER will be scored on a 1- 4 scale.\n\n\n\n\nTeacher-Facing Materials\n\nAQI Lesson Plan\nOptional: R code .zip file used to create the graphs OR Interactive online coding tutorial\n\n\n\n\nExamples of Student Work\nAQI Student Example CER\n\nDescription: Student example of a finished argumentative letter to a local politician using the information from their CER graphic organizer.\n\n\n\nReflection from teachers who have done this lesson\nWhat worked well? Why?\n\nAsking students to compare the air quality graphs of Portland and LA went really well. They understood the data visualization and how the EPA had incorrectly graphed the data. Having students test different factors that change air quality with the Atmotubes was also successful. Students really liked trying out different factors like Clorox cleaning wipes or whiteboard markers with the Atmotubes because they could test different things and see the resulting numbers on the app.\n\nWhat do you feel was missing?\n\nI would have given students little papers with questions to answer during the videos so that they stayed engaged. I might have had students compare the 2 graphs in small groups and then discuss the differences as an entire class.\n\nWhat changes would you make to future iterations? Why?\n\nIn the future, I would want someone to help make a preset code that made the corrected graphs of the EPA air quality data so that students could copy that code and get to see the correct graphs on their screen. Then students could discuss the differences with their groups and why the two versions of graphs are different. Instead of watching someone else do this part, I am wondering if it would feel more authentic if students discovered the mistake on their own.\n\nNote: we have updated the lesson since this feedback, and now there is an opportunity for students to make the graphs themselves. See the online AQI coding tutorial\nAlso check out this coding activity which incorporates moving around the classroom and pretending to be computers in order to introduce coding to students.\n\n\nWhat do you believe are some of your students’ major takeaways from this lesson?\n\nStudents learned that the ProLogis company was planning to build a truck warehouse across the street from their school. The students on the track team were very concerned about their lungs being affected by large amounts of exhaust. Students with asthma were concerned for their safety. The biggest takeaway was learning that different factors can change the air around them and that it will have an effect on their health. Students were also able to compare the graphs of Portland vs Los Angeles and also the corrected graphs made by coding.\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Middle School",
      "AQI Lesson Overview - Middle School"
    ]
  },
  {
    "objectID": "lesson_plans/climate_lesson.html",
    "href": "lesson_plans/climate_lesson.html",
    "title": "Climate Change Lesson",
    "section": "",
    "text": "Here are resources for teaching a lesson on climate change!\nClimate Change Lesson Code .zip file\n\n\n\n Back to top"
  },
  {
    "objectID": "lesson_plans/Biodiversity_lesson.html",
    "href": "lesson_plans/Biodiversity_lesson.html",
    "title": "Biodiversity Lesson",
    "section": "",
    "text": "Appropriate for: 9th-12th grade\nSubject: Intro Biology, Honors Biology, IB Biology\nNumber of students: 30 per class\nTime: Single 90 minute lesson (also included are resources for a longer unit)\n\n\n\n\n\nBiodiversity Lesson Plan - google doc\nBiodiversity Lesson Coding Tutorial\n\n \n\n\n\nfrom https://tualatinswcd.org/what-is-biodiversity-and-why-does-it-matter-for-you/"
  },
  {
    "objectID": "lesson_plans/Biodiversity_lesson.html#lesson-overview",
    "href": "lesson_plans/Biodiversity_lesson.html#lesson-overview",
    "title": "Biodiversity Lesson",
    "section": "Lesson Overview",
    "text": "Lesson Overview\nLesson Title: Biodiversity\nLesson Description:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLong Term Ecological Research sites (LTERs). Students will look at long term biodiversity trends in groups. See example graphs at left. Students will be able to create the following graphs to analyze biodiversity:\n\nTemperate Coniferous Plant OR Invertebrates Total Species\nTemperate Coniferous Plant OR Invertebrates Diversity Index\nTropical Plant OR Invertebrates Total Species\nTropical Plant OR Invertebrates Diversity Index\n\nTHESE GRAPHS STILL IN PROGRESS:\n\nTemperate Deciduous Plant OR Invertebrates Total Species\nTemperate Deciduous Plant OR Invertebrates Diversity Index\n“All Ecosystem” Plant Total Species\n“All Ecosystem” Plant Diversity Index\n\n\n\n\n\n\nData Science in the Lesson\nAn undergraduate student came into the classroom and helped teach the lesson. She introduced herself as a data science minor at Lewis and Clark and then went into what data science is. She talked about her experience with it through the classes she took and how she used data science so far in college. Students were able to run some code to look at graphs. We discussed trends after.\n\nNote: this lesson was originally taught with the assistance of undergraduate students who demonstrated coding. If you have not coded before and would like to incorporate basic data science/coding into your lesson, refer to the online biodiversity tutorial for an easy walk-through you can use to demonstrate data science in your classroom!\n\nBroader Unit Context\nThis data science/coding lesson was integrated within a larger Biodiversity Unit - see materials for that unit below. The students had already studied the meaning, levels, and status of biodiversity globally as well as ways that biodiversity is measured and conserved. We had implemented a series of data collection/field survey activities including recording data about the presence/absence of various types of tree species on our campus. This effort was then connected back to the BIOTIME dataset and the coding analysis."
  },
  {
    "objectID": "lesson_plans/Biodiversity_lesson.html#lesson-materials",
    "href": "lesson_plans/Biodiversity_lesson.html#lesson-materials",
    "title": "Biodiversity Lesson",
    "section": "Lesson Materials",
    "text": "Lesson Materials\n\nLesson Plan google doc\nLesson Slides\nIntro to NEON Science\n\nIntroduction to ecology field research, collecting and analyzing data.\n\nBIOTIME website\n\nDescription: This is the website that hosts the BIOTIME data used to create the graphs in this lesson. We evaluated the website together with the students the days before the data science lesson.\n\nBiodiversity Interactive Coding Tutorial\n\nDescription: Online tutorial which provides a walk-through on how to deal with large amounts of data and create custom biodiversity graphs.\n\nAnalyzing Graphs Template\n\nTemplate where students can paste the graph they created using the online website. They are asked to create a title and caption for the graph.\n\nBiodiversity Large Scale Graphic Organizer\n\nGraphic organizer for students to demonstrate what they’ve learned in this lesson so far about biodiversity. Includes an overview of biodiversity, ecological research programs, and comparing graphs they created.\n\nOptional: Biodiversity Lesson Code .zip file\n\nDescription: .zip file of the R code used to create the graphs used in this lesson. Can be uploaded into posit.cloud or Rstudio desktop and run from there, if you are familiar with coding."
  },
  {
    "objectID": "lesson_plans/Biodiversity_lesson.html#sec-broader-materials",
    "href": "lesson_plans/Biodiversity_lesson.html#sec-broader-materials",
    "title": "Biodiversity Lesson",
    "section": "Broader Unit Materials",
    "text": "Broader Unit Materials\nThis lesson was taught by two different teachers and incorporated into slightly different broader units. We’ve included both teachers materials below, separated into each of their units.\n\nBiodiversity Unit - IB Biology\n\nBiodiversity and Ecology Unit Plan\n\nDescription: Unit plan used in an IB Biology classroom. Includes many links to resources, slides, assessments, worksheets, and more!\n\n\n\n\nBiodiversity Unit with HIPPO framework\n\nSlides: Biodiversity: Status, Value, and Threats\n\nDescription: This is the slideshow I used to introduce the topic to the students. I presented these slides and the students took notes over several class periods. I designed the lecture around the HIPPO framework for Biodiversity loss that is detailed in the HHMI Biointeractive site I linked to below.\n\nHHMI:Biointeractive\n\nDescription: HHMI Biointeractive is one of the leading on-line resources for teaching biology at the high school level. I have found their materials to be extremely useful and interactive and they always generate a high level of student engagement.\n\nTree Surveys: 1, 2, 3, 4,\n\nDescription: As part of the Biodiversity Unit, I have my students collect data about different plants/trees on the campus including species name, size, height, crown spread, etc. We conduct multiple surveys so the students can see temporal changes to the plants/trees over time. I presented this work as kind of the front end/first step of the process of data analysis that ends with large scale analysis of trends that can be done with Coding.\n\nBIOTIME website\n\nDescription: This is the website that hosts the BIOTIME data. We evaluated the website together with the students the days before the data science lesson."
  },
  {
    "objectID": "lesson_plans/Biodiversity_lesson.html#reflection-from-teachers-who-have-taught-this-lesson-before",
    "href": "lesson_plans/Biodiversity_lesson.html#reflection-from-teachers-who-have-taught-this-lesson-before",
    "title": "Biodiversity Lesson",
    "section": "Reflection from teachers who have taught this lesson before",
    "text": "Reflection from teachers who have taught this lesson before\nWhat worked well? Why?\n\nThe data science lesson was well timed and integrated with our biology curriculum, specifically the unit on biodiversity. Students were already familiar with the key concepts around biodiversity and had already experienced collecting their own biodiversity data so they were well primed to talk about these larger datasets and analysis.\n\nWhat do you feel was missing?\n\nWe implemented this lesson in a single, 50 minute class period. The actual student work time was probably 30-35 min. This is a huge topic to teach in a single, short period. It would have been better to have several points of engagement and scaffolding for the students that unfolded over multiple days.\nData science is a broad field that includes data collection, data management, data visualization (maps, graphs, etc), data analysis, communicating data, etc. Each of these types generate different levels of student learning and engagement. It would have been interesting to actually assess which data science approach garnered the most student engagement and learning. Perhaps it was due to my lack of experience with coding, but I found that part to be the most difficult to teach and engage students with.\n\nNote: we have updated the lesson since this feedback, and now there is an opportunity for students to create graphs in an easier-to-use format that requires less coding. See Biodiversity Interactive Coding Tutorial.\n\n\nWhat changes would you make to future iterations? Why?\n\nIn order to make meaning from relatively complex topics like Biodiversity and Coding, the students need multiple points of access and scaffolding to be successful. Ideally, this topic would be chunked into multiple parts and assignments that unfold over several days and they need to be supported by me and the student teacher throughout this process.\nI would provide other opportunities for data science in the classroom beyond just coding/ R. I personally am much more interested in using spatial data to analyze biological phenomena, specifically using mapping software such as ArcGIS.\nI would have chosen a different dataset to manipulate and code with. I’m not entirely sure why, but the graphs we created with the BIOTIME dataset didn’t impress the students very much or generate much discussion. It sort of generated a collective shrug.\nI am very interested in having my students generate their own data that could then be integrated and used in larger, real life datasets. Ideally, my students would have collected their own presence/absence data of ecological communities and then submitted that to be part of the BIOTIME effort that is already underway globally.\n\nWhat do you believe are some of your students’ major takeaways from this lesson?\n\nThat high level data analysis of large complex, biological datasets can be done more efficiently and quickly by writing and using code and computer programming. That BIOTIME database provides additional evidence that biodiversity is declining in many parts of the world."
  },
  {
    "objectID": "lesson_plans/sea_levels_lesson.html",
    "href": "lesson_plans/sea_levels_lesson.html",
    "title": "Sea Levels Lesson",
    "section": "",
    "text": "Here are resources for teaching a lesson on sea level change!\nSea Levels Lesson Code .zip file\n\n\n\n Back to top"
  },
  {
    "objectID": "lesson_plans/mini_lessons.html",
    "href": "lesson_plans/mini_lessons.html",
    "title": "Stand-alone Mini Lessons to Support Teaching Data Science & Coding",
    "section": "",
    "text": "On this page, we’ve included a couple mini lessons that can help you introduce data science and coding to your students. They are not specific to subject and can be modified depending on your age group.\n\n\nOverview\nThis movement-based activity introduces students to the concept of coding by having them pretend to be computers and direct each other across a room using only specific “code” commands.\nLearning Outcomes\nThrough modeling how computers work in person, students will gain an understanding of the steps required in coding. Namely, a computer can only understand specific code, and it must be written in a specific order. Code must also be run all at once as opposed to stopping and starting it.\nInstructions\n\nPlace a few chairs on one side of the room. Have students stand on the other side of the room. For a challenge, place extra obstacles between students and the chairs.\nStudents get into groups of two and choose one person to be the “computer” and one to be the “coder”. The “coder” writes down code commands (see command options in the presentation and handout) to direct the “computer” across the room to sit in the chair.\nAfter ALL the commands are written down, the “computer” reads the paper and follows the instructions.\nSwitch roles and discuss!\n\nMaterials\n\n\n\nSlides\n\n\n\n\n\nHandout"
  },
  {
    "objectID": "lesson_plans/mini_lessons.html#introduction",
    "href": "lesson_plans/mini_lessons.html#introduction",
    "title": "Stand-alone Mini Lessons to Support Teaching Data Science & Coding",
    "section": "",
    "text": "On this page, we’ve included a couple mini lessons that can help you introduce data science and coding to your students. They are not specific to subject and can be modified depending on your age group.\n\n\nOverview\nThis movement-based activity introduces students to the concept of coding by having them pretend to be computers and direct each other across a room using only specific “code” commands.\nLearning Outcomes\nThrough modeling how computers work in person, students will gain an understanding of the steps required in coding. Namely, a computer can only understand specific code, and it must be written in a specific order. Code must also be run all at once as opposed to stopping and starting it.\nInstructions\n\nPlace a few chairs on one side of the room. Have students stand on the other side of the room. For a challenge, place extra obstacles between students and the chairs.\nStudents get into groups of two and choose one person to be the “computer” and one to be the “coder”. The “coder” writes down code commands (see command options in the presentation and handout) to direct the “computer” across the room to sit in the chair.\nAfter ALL the commands are written down, the “computer” reads the paper and follows the instructions.\nSwitch roles and discuss!\n\nMaterials\n\n\n\nSlides\n\n\n\n\n\nHandout"
  },
  {
    "objectID": "resources/cheatsheet.html",
    "href": "resources/cheatsheet.html",
    "title": "Cheatsheet for Data in the Wild Tutorials",
    "section": "",
    "text": "The following cheatsheet is based on commands used in a course developed for Lewis & Clark College, called “Data in the Wild”. It covers basic R commands (including basic arithmetic, importing data), cleaning and mutating data, plotting using ggplot and inferential statistics.\nFor more information and to download the tutorials used in conjunction with this cheatsheet, refer to the R files page."
  },
  {
    "objectID": "resources/cheatsheet.html#basic-r-commands",
    "href": "resources/cheatsheet.html#basic-r-commands",
    "title": "Cheatsheet for Data in the Wild Tutorials",
    "section": "Basic R Commands",
    "text": "Basic R Commands\n\nBasic arithmetic\n\nExamples: 5*6, sqrt(9), abs(-3)\nType help(command) to find information about any command\n\nCreate variables: Use &lt;- or = to assign values to a variable.\n\nExample: x &lt;- 7\n\nCreate a vector:\n\nvector &lt;- c(1,3,7)\nvector\n\n[1] 1 3 7\n\n\nCreate a data frame: data.frame(____)\n\ndf &lt;- data.frame(var_1 = c(1,2,3) , var_2 = c(\"cat\", \"dog\", \"fish\"))\ndf\n\n  var_1 var_2\n1     1   cat\n2     2   dog\n3     3  fish\n\n\n\n\nBasic Statistics\n\nmean(vector) : Calculates the mean of a given set of values.\nmedian(vector) : Calculates the median of a given set of values.\nsd(vector) : Calculates the standard deviation of a given set of values.\nnrow(data): Calculates the total number of rows in a dataset\nna.rm = TRUE : Remove NA values. Add this as an argument to any of the statistics calculations. E.g. mean(vector, na.rm=TRUE)"
  },
  {
    "objectID": "resources/cheatsheet.html#working-with-a-data-set-in-the-tidyverse",
    "href": "resources/cheatsheet.html#working-with-a-data-set-in-the-tidyverse",
    "title": "Cheatsheet for Data in the Wild Tutorials",
    "section": "Working with a data set in the tidyverse",
    "text": "Working with a data set in the tidyverse\nWe use the tidyverse to analyze data in this cheatsheet. To install run the following code:\n\ninstall.packages(\"tidyverse\")\n\nAfter installing, to load the tidyverse run:\n\nlibrary(tidyverse)\n\n\nUploading and viewing a data set\n\ndataFrame &lt;- read_csv(\"myCSV.csv\") : Creates a data frame from a file called myCSV.csv\nwrite_csv(dataFrame, \"myCSV.csv\"): Creates a csv from a data frame\nview(dataFrame): Enter view-mode to see the entire data frame\nstr(dataFrame): Gives the structure of data frame\nglimpse(dataFrame): Take a quick look at a data frame\nsummary(dataFrame): Returns min, max, mean, meadian, 1st/3rd quartiles for all vectors in dataFrame\ndataFrame$columnName: Calls up specific column from a data frame\nunique(vector): Find the number of unique values in a column/vector\nlength(): Counts the number of entries in a column/vector\n\n\n\nRearranging & Summarizing data\n\nUse logical operators to combine conditions: & (and), | (or), ! (not)\nUse comparison operators to describe conditions: &lt;, &gt;, ==, !=, &lt;=, &gt;=\ngroup_by(.data, column): Takes a dataset and groups it by a column/variable\nsummarize(.data, summaryStat = statistic formula): Takes a dataset and outputs summary statistics that you define.\n\nn(): Calculates current group size. Can be used in summarize and group_by\nCombine group_by and summarize using the pipe (|&gt;) to see summary statistics for specific groups/variables.\nThe pipe: Use |&gt; OR %&gt;% to string functions and data together. Read as “AND THEN”.\n\nExample:\n\n  dataFrame |&gt; \n    group_by(firstColumn)|&gt; \n    summarize(mean_of_secondColumn = mean(secondColumn), \n              standard_deviation_of_secondColumn = sd(secondColumn),\n              number_in_each_group = n(), \n              percent = n()/nrow(dataFrame)*100)\n\nfilter(.data=myDataFrame, column==\"some value\"): Subsets dataframe, lets us pick rows of data based on “some value”, including a specific value, mean, median, etc.\nselect(.data, column(s)): Choose columns from a dataframe.\n\ncolumn1 , column2 : choose column1 and column2\ncolumn1:column5 : choose all columns between column1 and column5\n-column1: choose all columns except column1\n\nmutate(data, newColumn = yourFormula): Creates a new column in a dataset defined by a calculation you input.\narrange(data, column): Rearrange data into numerical order by a specific column"
  },
  {
    "objectID": "resources/cheatsheet.html#plotting-with-ggplot",
    "href": "resources/cheatsheet.html#plotting-with-ggplot",
    "title": "Cheatsheet for Data in the Wild Tutorials",
    "section": "Plotting with GGPlot",
    "text": "Plotting with GGPlot\n\nResources:\n\nGGPlot Cheatsheet pdf\nPosit.cloud ggplot cheatsheet, website version\n\n\n\nGGPlot Basics:\n\nBasic structure:\n\nggplot(data, mapping=aes()) +\n      geom_function()\n\nConnect different properties using a +\nBasic Components:\n\nData: data=dataSet: Define your data set\nAesthetics: mapping = aes(variables): Define the variables. Can also specify color/fill for your graph and geometries.\nGeometry: geom_GeometricObject(): Define the type of plot\n\n\n\n\nGeometries\n\ngeom_histogram(): Creates a histogram\n\nSyntax: geom_histogram(bins=X) Specify number of bins\n\ngeom_point(): Creates points (scatterplot) for each data point\n\nCan specify color = ___ and shape = ____\n\ngeom_bar() : Creates a bar graph\n\nSyntax:\n\ngeom_bar(): Aggregates data for you\ngeom_bar(stat = \"identity\"): Creates a bar graph with pre-aggregated data that you input\ngeom_bar(position=\"___\") Can choose “stack” (bars on top of each other), “dodge” (bars side by side) or “fill” (bars stacked, scaled to 100%).\nAdd error bars: geom_errorbar(mapping=aes(ymin, ymax), width)\n\n\ngeom_boxplot(): Creates a boxplot\n\nAdd error bars: stat_boxplot(geom=\"errorbar\")\n\ngeom_density(): Creates a density graph\n\nSyntax: geom_density(adjust=X) X is a ratio, how smooth the graph is\n\ngeom_smooth(method=\"lm\", se=FALSE): Creates a line of best fit\nlabs() : Add a title and axes labels to your graph\nfacet_wrap(~ variable): Create separate plots for each aspect of a given variable\nAnd more!\n\n\n\nOther useful GGPlot functions:\n\ninstall.packages(\"ggplot2\") and library(ggplot2): Install and load GGplot package. Note: ggplot2 is included in the tidyverse so you do NOT need to load both packages.\nggsave(\"yourTitleHere.jpg\", currentPlotName): Saves “currentPlotName” as a jpg file called “yourTitleHere.jpg”."
  },
  {
    "objectID": "resources/cheatsheet.html#examples-using-ggplot-with-other-tidyverse-functions",
    "href": "resources/cheatsheet.html#examples-using-ggplot-with-other-tidyverse-functions",
    "title": "Cheatsheet for Data in the Wild Tutorials",
    "section": "Examples: Using GGPlot with other tidyverse functions",
    "text": "Examples: Using GGPlot with other tidyverse functions\nUse the pipe to string together functions and create tidy data before plotting.\nThe following examples use data from the palmerpenguins package which has been preloaded into this document. Click the green play button to see them run. Feel free to edit the code as well if you want to try out other functions!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere’s a preview of the penguin data, and here is a link to more information about the data.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nBasic bar graph of median flipper length on each island:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nBoxplot of Adelie penguin flipper length, by sex:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "resources/cheatsheet.html#inferential-statistics",
    "href": "resources/cheatsheet.html#inferential-statistics",
    "title": "Cheatsheet for Data in the Wild Tutorials",
    "section": "Inferential Statistics",
    "text": "Inferential Statistics\n\nBasic statistical tests\n\nt.test(data, dependentVariable ~ independentVariable): 2 sample t-test - compare 2 groups on a numerical measure\n\nRequires: 2 samples of quantitative data\n\naov(data, dependentVariable ~ independentVariable): ANOVA (analysis of variance) test - compare means among groups\n\nRequires: Independent variable - categorical; dependent variable - numerical\n\nTukeyHSD(data): Tukey’s HSD - Post Hoc test which tells you which specific means differ from each other\n\n\n\nLinear regression\n\ncor(data$independentVariable, data$dependentVariable): Correlation coefficient - outputs a number between -1 and 1 which tells strength and direction of the relationship between 2 numeric variables\n\nRequires 2 numeric variables\n\nlm(data, dependentVariable ~ independentVariable): Fit a linear model\n\nsummary(yourLinearModel): View more details about a linear model including regression coefficients, p value for linear model coefficients, quartiles, residual standard error, F-statistic."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "6-12 Data Science Resources",
    "section": "",
    "text": "Welcome! This site includes lots of resources for using data science in your middle or high school classroom.\nUnder Lesson Plans, you’ll find resources for various types of STEM lessons that all incorporate some data science. Most of these will link to powerpoints, code files, lesson plans, and more that you can use. The code files found here require some basic R coding knowledge and can be opened in Rstudio desktop or posit.cloud (an online version of Rstudio).\nUnder Online Tutorials, you’ll find tutorials that can be done directly on this website which can be used to teach and learn about data science and basic R coding. These correspond with the lesson plans and can often be used instead of downloading the code files under “Lesson Plans” (if you prefer not to use Rstudio). They generally require minimal to no experience in R coding.\nBrowser information: The online R tutorials will not run on safari. Use chrome, firefox, or another browser instead.\n\n\n\n Back to top"
  },
  {
    "objectID": "tutorials/AQI_tutorial_advanced.html#introduction",
    "href": "tutorials/AQI_tutorial_advanced.html#introduction",
    "title": "AQI Part 2 - Custom Graphs",
    "section": "Introduction",
    "text": "Introduction\nWelcome to Part 2 of the Air Quality Data Science Tutorials! If you have not done Part 1 yet, click here to complete that tutorial first - it will provide helpful background info about air quality and the basics of data science.\nPart 2 will build off of the graphs created in Part 1 and allow you to customize them with your own locations as well as create different types of graphs.\n\nOur Data Set\n\n\nThis tutorial uses air quality data from the EPA ranging from 2000-2023, and has data on all counties in the United States. The Air Quality Index (AQI) is calculated by looking at various pollutants including Particle Pollution (PM2.5 and PM10), Carbon Monoxide, Lead, Nitrogen Dioxide, Ozone, and Sulfur Dioxide. Here is a link to the data and here is a link to more information about the data.\nOur data tells gives the highest recorded AQI value on a given day in a given location.\nThe data set is very large, so we will not view it now, but there will be an option to view individual counties later in the tutorial.\n\n\n\n\n\n\nFrom.https://www.earthdata.nasa.gov/topics/atmosphere/air-quality",
    "crumbs": [
      "Air Quality Tutorials",
      "AQI Part 2 - Custom Graphs"
    ]
  },
  {
    "objectID": "tutorials/AQI_tutorial_advanced.html#customizing-your-graphs",
    "href": "tutorials/AQI_tutorial_advanced.html#customizing-your-graphs",
    "title": "AQI Part 2 - Custom Graphs",
    "section": "Customizing your graphs!",
    "text": "Customizing your graphs!\nIn this tutorial, you can create graphs with various customizations. Here are your options:\n\nmake a scatterplot of AQI over time for any location(s)\nmake a tile plot and choose your own location(s)\nview raw data for any county\nChallenge - make a tile plot and customize the location, x axis, legend, and labels\n\nChoose one of the options above, or click “continue” to do all of them!\n\nContinue: scatterplot",
    "crumbs": [
      "Air Quality Tutorials",
      "AQI Part 2 - Custom Graphs"
    ]
  },
  {
    "objectID": "tutorials/AQI_tutorial_advanced.html#sec-scatterplot",
    "href": "tutorials/AQI_tutorial_advanced.html#sec-scatterplot",
    "title": "AQI Part 2 - Custom Graphs",
    "section": "Create a scatter plot of AQI over time",
    "text": "Create a scatter plot of AQI over time\nFirst, let’s create a scatterplot! We’re going to graph the number of days per year when the AQI was above a certain threshold.\nIn other words, we’ll graph the number of days when the AQI was red (or orange or green or whatever level you choose). Then, we’ll see how this data changes over time, from 2020 to 2023.\nTo do this, we’ll use a scatterplot. A scatterplot is a collection of points, where each point represents a data value.\n\nStop and Think\nBefore we start, what do you think the graph might look like? Discuss these questions with your neighbor:\n\nIn Portland, do you think the air quality is getting better or worse since 2000?\nIf we only look at Unhealthy AQI levels (red) in Portland, do you think there will be more or less total days of unhealthy air quality since 2000?\n\n\n\nContinue",
    "crumbs": [
      "Air Quality Tutorials",
      "AQI Part 2 - Custom Graphs"
    ]
  },
  {
    "objectID": "tutorials/AQI_tutorial_advanced.html#sec-tilemylocation",
    "href": "tutorials/AQI_tutorial_advanced.html#sec-tilemylocation",
    "title": "AQI Part 2 - Custom Graphs",
    "section": "Make a tile plot of any county!",
    "text": "Make a tile plot of any county!\nWhat if you wanted to look at the air quality data for another place (other than Portland and LA which were analyzed in Part 1)? You’ll be able to do that below.\nIf you’d like a challenge, go to the final section to create a tile plot with multiple different variables you can adjust!\n\nStep 1: Choose a county\nFirst, you’ll need to choose a county that you want to graph.\nHere are your options, organized by state. Click through them and find the county you’d like to graph. You’ll need to remember the exact spelling AND capitalization.\n\n\n\n\n\n\nStates and County Names\n\n\n\n\n\n\n\n\n\n\n\nStep 2: Add your county name to the code\nNow, you’ll tell the computer which county you chose.\nImportant make sure you spell the County name exactly as you found it in the table above, and be sure to use proper capitalization as well.\n\nCode editorExample\n\n\nType your county name in the code chunk below. Replace the red line with the county but DON’T delete the quotes \"\".\nPress Run Code\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\nContinue",
    "crumbs": [
      "Air Quality Tutorials",
      "AQI Part 2 - Custom Graphs"
    ]
  },
  {
    "objectID": "tutorials/AQI_tutorial_advanced.html#sec-rawdata",
    "href": "tutorials/AQI_tutorial_advanced.html#sec-rawdata",
    "title": "AQI Part 2 - Custom Graphs",
    "section": "View raw data",
    "text": "View raw data\nAfter graphing, you may wonder why the graph looks the way it does. Here, you can look at your raw data.\n\nChoose a county\nFirst, you’ll need to choose a county that you want to graph. See section Choose a county to see a list of county options.\nAfter choosing a county, tell the computer which county you chose.\nImportant make sure you spell the County name exactly as you found it in the table above, and be sure to use proper capitalization as well.\n\nCode editorExample\n\n\nType your county name in the code chunk below. Replace the red line with the county but DON’T delete the quotes \"\". Keep all the code below the red line as well.\nPress Run Code\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPress run code\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\nRaw data\nClick the blue box to see raw data for the county you chose.\n\n\n\n\n\n\nOpen this blue box first!\n\n\n\n\n\nPress run code to see your raw data!\nIt might be very large, so you can click the blue rectangle again to close the data.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNote: If this code doesn’t work, it’s because you haven’t chosen a county in a previous step. Return to Choose a county and run the code to choose your county.\n\n\n\nClick “continue” for a coding challenge.\n\nContinue: Tile plot challenge",
    "crumbs": [
      "Air Quality Tutorials",
      "AQI Part 2 - Custom Graphs"
    ]
  },
  {
    "objectID": "tutorials/AQI_tutorial_advanced.html#sec-codechallenge",
    "href": "tutorials/AQI_tutorial_advanced.html#sec-codechallenge",
    "title": "AQI Part 2 - Custom Graphs",
    "section": "Challenge: Tile plot with more variable options",
    "text": "Challenge: Tile plot with more variable options\nWant to create a more complex tile plot? In this section, you’ll have the opportunity to customize the x axis, legend, and plot labels.\n\nStep 1: Choose your location\nFirst, you’ll tell the computer which county you’d like to graph.\nImportant make sure you spell the County name exactly as you found it in the table above, and be sure to use proper capitalization as well.\n\nCode editorExample\n\n\nType the county name in the code chunk below. Replace the red line with the county but DON’T delete the quotes \"\".\nPress run code\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\nContinue",
    "crumbs": [
      "Air Quality Tutorials",
      "AQI Part 2 - Custom Graphs"
    ]
  },
  {
    "objectID": "tutorials/AQI_tutorial_advanced.html#congratulations",
    "href": "tutorials/AQI_tutorial_advanced.html#congratulations",
    "title": "AQI Part 2 - Custom Graphs",
    "section": "Congratulations!",
    "text": "Congratulations!\nYou have finished this tutorial and made lots of different types of air quality graphs! Excellent work!\n\n\n\nfrom.giphy.com",
    "crumbs": [
      "Air Quality Tutorials",
      "AQI Part 2 - Custom Graphs"
    ]
  },
  {
    "objectID": "tutorials/salmon_tutorial.html#fish-crossings---introduction",
    "href": "tutorials/salmon_tutorial.html#fish-crossings---introduction",
    "title": "Salmon Crossing Data Tutorial",
    "section": "Fish Crossings - Introduction",
    "text": "Fish Crossings - Introduction\nHello! Welcome to this tutorial. We’re going to learn about how a computer can use HUGE amounts of data and make cool graphs from it.\nToday we’ll get to learn about fish crossings at dams in the Columbia River.\nWe’ll start by looking at the Bonneville Dam and learn how many salmon and steelhead cross the Bonneville dam each year."
  },
  {
    "objectID": "tutorials/salmon_tutorial.html#what-is-the-bonneville-dam",
    "href": "tutorials/salmon_tutorial.html#what-is-the-bonneville-dam",
    "title": "Salmon Crossing Data Tutorial",
    "section": "What is the Bonneville Dam?",
    "text": "What is the Bonneville Dam?\n\n\n\n\n\nFrom https://thegorgeguide.com/bonneville-dam-visitor-center/\n\n\n\n\n\n\n\n\n\n\nThe Bonneville Dam is in the Columbia River and was constructed between 1933 and 1938. When it was constructed, it had a large impact on the surrounding land, Indigenous communities, and animals and plants.\n\nBrainstorm:\nWhat are some positive and negative impacts you think the dam might have?\nTalk with your classmates about how some impacts the dam might have on the surronding areas. Here are some ideas you can consider:\n\nHydropower\nNative American communities\nSalmon populations\nSalmon are important spiritually and culturally to Native Americans\nSea lions\nOther animals who live where the dam was created\n\n\n\nContinue"
  },
  {
    "objectID": "tutorials/salmon_tutorial.html#analyzing-huge-data-with-the-computer",
    "href": "tutorials/salmon_tutorial.html#analyzing-huge-data-with-the-computer",
    "title": "Salmon Crossing Data Tutorial",
    "section": "Analyzing HUGE data with the computer",
    "text": "Analyzing HUGE data with the computer\nWe’re going to analyze all the numbers that are collected at the Bonneville Dam using the computer.\n\nUsing R\nWe will use a coding language called “R”. Basically, “R” is a collection of commands that the computer understands. You can tell the computer one of the commands and it will know to do something.\nFor example one command the computer knows is multiplication! Try typing 5*3 in the box right below this. Then click the green play button that says “run code”\n\nCode editorAnswer\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPress run code\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nWhat happened? Did you see the number 15 pop out?\nThe computer can also do very complicated things, like create graphs. We’ll learn more about that later in this tutorial.\nThe box above where you typed 5*3 is called a code chunk. You can type commands into any similar box and it will tell the computer to do various things.\nHere’s another code chunk you can try typing something into. Maybe you want to try a division problem? Or maybe you want the computer to say hello to you? There’s a few different tabs you can click on to learn how to do cool things!\n\nCode editorSay helloFind the largest number\n\n\nWant to try out your own code? Maybe another math problem? Here’s a place to do that. Otherwise click on the tabs to learn something new!\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nWould you like the computer to say hello to you?\nFirst, type your name where the blank _______ is, in the second code chunk. Don’t delete the quotation marks.\nHere’s an example:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nNow your turn. Type your name instead of the blank _____ and then click play:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nWe can use r to find the largest number in a long list of numbers. To try this out, type a bunch of numbers inside the parentheses (______). Separate your numbers with a comma. Don’t delete anything else!\nHere’s an example:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNow you try. Type your numbers after the first parenthesis and separate them with a comma. Then click run.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNow let’s run a function that will tell us which number is the biggest. Click the play button on this code chunk too.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\nContinue"
  },
  {
    "objectID": "tutorials/salmon_tutorial.html#looking-at-data",
    "href": "tutorials/salmon_tutorial.html#looking-at-data",
    "title": "Salmon Crossing Data Tutorial",
    "section": "Looking at data",
    "text": "Looking at data\nOne thing the computer is very useful for is dealing with HUGE amounts of data. Data is a collection of lots of numbers that tell us information about something.\nLet’s return to the data that is collected at the Bonneville Dam. I’ve used coding in the background of this tutorial to make it a little more condensed than the data you saw before. Want to look at it? Click the blue box below.\n\n\n\n\n\n\nClick this to see our data!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWow that’s a lot of numbers! This is a HUGE amount of data. Notice how you can scroll on the data and there are 9 separate pages which show new entries.\n\nHow to read the data table\nLet’s learn about what some of this data means. First, the table that you see when you click the blue rectangle above is called a data table. It contains a bunch of numbers which tell us how many fish crossed the Bonneville Dam on any given day.\n\nReading Dates\n\nQuestionAnswer\n\n\nOn the top of the data table, you’ll see bolded numbers like 1/1, 1/2, etc. Do you have a guess what those might mean? Discuss with your neighbor and then click the tab above to see the answer.\n\n\n\nThose numbers are referring to dates! For example, 1/1 is January 1. But, they don’t include the year. Can you spot where the year is in the data?\n\n\n\n\nCheck for understandingHint\n\n\n\nCan you find how many fish crossed the Bonneville Dam on April 1 in 2022?\n\n\n\n\n ✗0\n\n\n ✓57\n\n\n ✗30495\n\n\n\n\n\n\n\nOn the far left side of the data, you should see the year. Find 2022 and then find 4/1 on the top. What number is underneath 4/1 in the 2022 row?\n\n\n\n\nContinue"
  },
  {
    "objectID": "tutorials/salmon_tutorial.html#graphing",
    "href": "tutorials/salmon_tutorial.html#graphing",
    "title": "Salmon Crossing Data Tutorial",
    "section": "Graphing",
    "text": "Graphing\nAnother way we can look at this data is by graphing it. The computer can help us a lot with this too.\nWe’re going to make a graph of the total number of Chinook that cross the Bonneville each year.\nBelow this, we have code to create graphs of all the data we were looking at before. Press the green run code button to see the graph. There are options to look at a graph with and without a connecting line between the points.\n\nGraph without connecting lineGraph with Connecting LineChange the graph color!\n\n\nPress run code\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPress run code\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nWant to try changing the color of the line and the points?\nIn the code chunk below, replace the red lines ____ with the color you want for the connecting line and the points. Make sure to write your color inside the quotes \"\". Here’s an example: pointColor = \"red\"\nHere are some color options you can try:\n-   \"red\"\n-   \"green\"\n-   \"purple\"\n-   \"salmon\"\n-   \"darkblue\"\n-   \"orange\"\nType in your colors below and then press run code.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNow that you’ve chosen the colors, you can run the graph code again. Press run code right below this text.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\nBrainstorm\n\nWhat do you see?\nWhat does it mean?\nWhat do you wonder?\n\n\nNote to teachers At this point I recommend you check out THIS PRESENTATION to explore what the graphs mean in your class. Additionally, click to the end of this tutorial to see other graphs for different locations and species.\n\nContinue"
  },
  {
    "objectID": "tutorials/salmon_tutorial.html#congratulations",
    "href": "tutorials/salmon_tutorial.html#congratulations",
    "title": "Salmon Crossing Data Tutorial",
    "section": "Congratulations!!",
    "text": "Congratulations!!\nYou learned how you can use the computer to look at large amounts of numbers and data. But, data doesn’t tell us everything!\n\nBrainstorm\n\nWhat questions do you have after looking at this data?\nHow could you find the answer to those questions?\nAre there other ways you could learn about the impact of the dam other than looking at data?\n\nHow would you do that?\nPossible methods: interviews, online research, looking at pictures of the dam and surronding areas, visiting the dam, learning about salmon biology\n\nWhat do the data/numbers not tell us?\n\n\n\nLearn more!"
  },
  {
    "objectID": "tutorials/salmon_tutorial.html#graphs-of-other-species-and-locations",
    "href": "tutorials/salmon_tutorial.html#graphs-of-other-species-and-locations",
    "title": "Salmon Crossing Data Tutorial",
    "section": "Graphs of other species and locations",
    "text": "Graphs of other species and locations\nHere are graphs of other species (Chinook and Steelhead) at other dams (Dalles and Bonneville) as well which you can take a look at!\nPress run code on each of the code chunks below to see different graphs.\n\nChinook Crossings at the Dalles\n\nGraph without connecting lineGraph with connecting line\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\nSteelhead Crossings at the Bonneville Dam\n\nGraph without connecting lineGraph with connecting line\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\nThe End"
  },
  {
    "objectID": "tutorials/test.html",
    "href": "tutorials/test.html",
    "title": "test tutorial",
    "section": "",
    "text": "hello\nwhat is up\n\n\n\n\nlet’s try this ok\n\nno go to sec2\nor sec 3\n\nContinue\n\n\n\n\nright\n\nContinue\n\n\n\n\nhello\n\nContinue\n\n\n\n\nyes"
  },
  {
    "objectID": "tutorials/test.html#part-1-introduction-to-topic",
    "href": "tutorials/test.html#part-1-introduction-to-topic",
    "title": "test tutorial",
    "section": "",
    "text": "hello\nwhat is up\n\n\n\n\nlet’s try this ok\n\nno go to sec2\nor sec 3\n\nContinue"
  },
  {
    "objectID": "tutorials/test.html#sec-2",
    "href": "tutorials/test.html#sec-2",
    "title": "test tutorial",
    "section": "",
    "text": "right\n\nContinue"
  },
  {
    "objectID": "tutorials/test.html#sec-3",
    "href": "tutorials/test.html#sec-3",
    "title": "test tutorial",
    "section": "",
    "text": "hello\n\nContinue"
  },
  {
    "objectID": "tutorials/test.html#part-4-howdy",
    "href": "tutorials/test.html#part-4-howdy",
    "title": "test tutorial",
    "section": "",
    "text": "yes"
  }
]