[
  {
    "objectID": "tutorials/salmon_tutorial.html#fish-crossings---introduction",
    "href": "tutorials/salmon_tutorial.html#fish-crossings---introduction",
    "title": "Salmon Crossing Data Tutorial",
    "section": "Fish Crossings - Introduction",
    "text": "Fish Crossings - Introduction\nHello! Welcome to this tutorial. We’re going to learn about how a computer can use HUGE amounts of data and make cool graphs from it.\n\n\n\n\n\nFrom https://www.spokesman.com/blogs/outdoors/2015/may/08/how-fast-can-salmon-swim-upstream-idaho-waters/\n\n\n\n\n\nToday we’ll get to learn about fish crossings at dams in the Columbia River.\nWe’ll start by looking at the Bonneville Dam and learn how many salmon and steelhead cross the Bonneville dam each year."
  },
  {
    "objectID": "tutorials/salmon_tutorial.html#using-r",
    "href": "tutorials/salmon_tutorial.html#using-r",
    "title": "Salmon Crossing Data Tutorial",
    "section": "Using R",
    "text": "Using R\nWe’re going to use a coding language called “R”. Basically, “R” is a collection of commands that the computer understands. You can tell the computer one of the commands and it will know to do something.\nFor example one command the computer knows is multiplication! Try typing 5*3 in the box right below this. Then click the green play button that says “run code”\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWhat happened? Did you see the number 15 pop out?\nThe computer can also do very complicated things, like create graphs. We’ll learn more about that later in this tutorial.\nThe box above where you typed 5*3 is called a code chunk. You can type commands into any similar box and it will tell the computer to do various things.\nHere’s another code chunk you can try typing something into. Maybe you want to try a division problem? Or maybe you want the computer to say hello to you? There’s a few different tabs you can click on to learn how to do cool things!\n\nCode editorSay helloFind the largest number\n\n\nWant to try out your own code? Maybe another math problem? Here’s a place to do that. Otherwise click on the tabs to learn something new!\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nWould you like the computer to say hello to you?\nFirst, type your name where the blank _______ is, in the second code chunk. Don’t delete the quotation marks.\nHere’s an example:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nNow your turn. Type your name instead of the blank _____ and then click play:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nWe can use r to find the largest number in a long list of numbers. To try this out, type a bunch of numbers inside the parentheses (______). Separate your numbers with a comma. Don’t delete anything else!\nHere’s an example:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNow you try. Type your numbers after the first parenthesis and separate them with a comma. Then click run.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNow let’s run a function that will tell us which number is the biggest. Click the play button on this code chunk too.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "tutorials/salmon_tutorial.html#looking-at-data",
    "href": "tutorials/salmon_tutorial.html#looking-at-data",
    "title": "Salmon Crossing Data Tutorial",
    "section": "Looking at data",
    "text": "Looking at data\nOne thing the computer is very useful for is dealing with HUGE amounts of data. Data is a collection of lots of numbers that tell us information about something.\nFor example, if you measured the temperature every single day for 1 month and wrote it down, you would create data.\nAt the Bonneville dam, there is someone who does something similar with fish. They count how many fish cross the Bonneville dam every single day. Then they write down exactly how many fish they see, what time and what kind of fish. All those numbers are called data! Then, someone puts all that data online for anyone to see (like us!).\nIn fact, we’re going to use some of that data. Want to look at it? Click the green play button on the code chunk below.\nBetter view in the callout so maybe delete this part….\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nClick this to see our data!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWow that’s a lot of numbers! This is a HUGE amount of data. Notice how you can scroll on the data and there are 9 separate pages which show new entries.\n\nHow to read the data table\nLet’s learn about what some of this data means. First, the table that you see when you click the blue rectangle above is called a data table. It contains a bunch of numbers which tell us how many fish crossed the Bonneville Dam on any given day.\n\nReading Dates\n\nQuestionAnswer\n\n\nMAYBE INSERT A SCREENSHOT HERE\nOn the top of the data table, you’ll see bolded numbers like 1/1, 1/2, etc. Do you have a guess what those might mean? Discuss with your neighbor and then click to the next slide to see the answer.\n\n\nThose numbers are referring to dates! For example, 1/1 is January 1. But, they don’t include the year. Can you spot where the year is in the data?\n\n\n\n\nCheck for understandingHint\n\n\n\nCan you find how many fish crossed the Bonneville Dam on April 1 in 2023?\n\n\n\n\n ✗0\n\n\n ✓49\n\n\n ✗30495\n\n\n\n\n\n\n\nOn the far left side of the data, you should see the year. Find 2023 and then find 4/1 on the top. What number is underneath 4/1 in the 2023 row?\n\n\n\n\n\nFinding the maximum fish crossings in a year\n\nQuestionHint\n\n\nWhat is the maximum number of fish that crossed the Bonneville Dam in one day in 2022?\n\n\nSee if you can find the biggest number in the 2022 row. If it seems too hard, scroll down past this question to learn an easy way to do this with the computer!\n\n\n\nWere you able to figure out the maximum number of fish that crossed the Bonneville Dam in one day in 2022? It was probably pretty annoying to have to look through all the numbers…\nLuckily, the computer can make this task much easier! Try running the code below. It will find the maximum number in 2022. If you want to learn more about how it works, click the “Learn more” tab.\n\nCode editorLearn moreChallengeAnswer\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nDo you see the number 33607 pop out after you run the code? That’s the largest number of fish that crossed the Bonneville dam in 2022 in a day!\n\n\nHere’s the code we’re using again:\n\nmax(Bonneville_chinook[2,])\n\nDo you recognize any words in the code?\n\nmax: This is called a “function”. It tells the computer to find the max value.\nBonneville_chinook: This tells the computer to look in our data called Bonneville_chinook\n2: This tells the computer to look specifically at the second row of the the data, which is the 2022 row.\n\n\n\nWant to try using the code yourself? See if you can figure out how to find the maximum value in 2019. Edit the code in the code editor below:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHint: The “2” tells the computer which row to look at. How many rows down is 2019?\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nSo the largest number of fish that crossed the Bonneville dam in 2022 in a day is 33607!\n\n\n\nFinding the total number of fish that cross the Bonneville dam each year\nWhat if you wanted to know how many total fish crossed the dam this year, compared to 50 years ago? We can use the computer to answer that question too!\nFirst, let’s make a prediction. Think about what you’ve learned about dams and how they impact fish trying to get past them.\nDo you think there are more fish or less fish in 2022 compared to 1972 (50 years before)? Talk to your neighbor about your predictions!"
  },
  {
    "objectID": "tutorials/salmon_tutorial.html#to-be-finished-will-include-graphs-of-species-crossing-different-dams",
    "href": "tutorials/salmon_tutorial.html#to-be-finished-will-include-graphs-of-species-crossing-different-dams",
    "title": "Salmon Crossing Data Tutorial",
    "section": "TO BE FINISHED… will include graphs of species crossing different dams",
    "text": "TO BE FINISHED… will include graphs of species crossing different dams"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "6-12 Data Science Resources",
    "section": "",
    "text": "Welcome to this site!"
  },
  {
    "objectID": "lesson_plans/lesson_links.html",
    "href": "lesson_plans/lesson_links.html",
    "title": "R Files for Data Science Lessons",
    "section": "",
    "text": "Here, you can find R code files for each lesson we have on this website. Each link below will download a .zip file containing the code and datasets for each lesson. We recommend you open the files using Rstudio desktop or posit.cloud (an online version of Rstudio).\nAdditionally, check out the tabs under “Lesson Plans” for more information and resources on how to teach these lessons!"
  },
  {
    "objectID": "lesson_plans/lesson_links.html#middle-school-lessons",
    "href": "lesson_plans/lesson_links.html#middle-school-lessons",
    "title": "R Files for Data Science Lessons",
    "section": "Middle School Lessons",
    "text": "Middle School Lessons\nSalmon Lesson Code .zip file\nAir Quality Lesson Code .zip file"
  },
  {
    "objectID": "lesson_plans/lesson_links.html#high-school-lessons",
    "href": "lesson_plans/lesson_links.html#high-school-lessons",
    "title": "R Files for Data Science Lessons",
    "section": "High School Lessons",
    "text": "High School Lessons\nAir Quality Lesson Code .zip file (same file as the middle school air quality lesson… wasn’t sure where to put it)\nBiodiversity Lesson Code .zip file\nClimate Change Lesson Code .zip file\nSea Levels Lesson Code .zip file"
  },
  {
    "objectID": "lesson_plans/AQI_lesson.html",
    "href": "lesson_plans/AQI_lesson.html",
    "title": "Air Quality Lesson",
    "section": "",
    "text": "Here are resources for teaching a lesson on air quality!\nAir Quality Lesson Code .zip file"
  },
  {
    "objectID": "lesson_plans/Salmon_lesson.html",
    "href": "lesson_plans/Salmon_lesson.html",
    "title": "Salmon School",
    "section": "",
    "text": "Here are resources for teaching a lesson on salmon crossing the dams in the Columbia river!\nSalmon Lesson Code .zip file"
  },
  {
    "objectID": "lesson_plans/climate_lesson.html",
    "href": "lesson_plans/climate_lesson.html",
    "title": "Climate Change Lesson",
    "section": "",
    "text": "Here are resources for teaching a lesson on climate change!\nClimate Change Lesson Code .zip file"
  },
  {
    "objectID": "lesson_plans/Biodiversity_lesson.html",
    "href": "lesson_plans/Biodiversity_lesson.html",
    "title": "Biodiversity Lesson",
    "section": "",
    "text": "Here are resources for teaching a lesson on biodiversity!\nBiodiversity Lesson Code .zip file"
  },
  {
    "objectID": "lesson_plans/sea_levels_lesson.html",
    "href": "lesson_plans/sea_levels_lesson.html",
    "title": "Sea Levels Lesson",
    "section": "",
    "text": "Here are resources for teaching a lesson on sea level change!\nSea Levels Lesson Code .zip file"
  },
  {
    "objectID": "lesson_plans/COR_lesson.html",
    "href": "lesson_plans/COR_lesson.html",
    "title": "COR Lesson",
    "section": "",
    "text": "Here are resources for teaching a lesson on COR?"
  },
  {
    "objectID": "tutorials/climate_change_tutorial.html",
    "href": "tutorials/climate_change_tutorial.html",
    "title": "Climate Change Data Tutorial",
    "section": "",
    "text": "Please enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWelcome to this data science tutorial! We’ll be using R to look at climate change data.\nR is a coding language that is often used to look at LARGE amounts of data. It can do all sorts of things including basic math!\nWant to try using R?\nIn the code box right below this, type in 6+3 and press the green play button:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nDo you see the answer 9 that popped out right under your code? Pretty cool!\nThe gray and white box with the green arrow and “run code” button is called a code chunk. You can type in “R commands” into that box and it will output the answer underneath the code chunk.\n\n\nToday we’ll be using R to look at climate data. We will be able to create graphs of different variables in our data, like carbon dioxide emissions and temperature.\nWe’ve preloaded a dataset into this tutorial. This was found\n\n\nLet’s start by taking a look at the data set. Click the green play button below and see what happens!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nYou should see 10 rows of data and a lot of random words. We won’t go into what all of it means, but here’s a quick overview:\n\nThe words on the top (country, year, iso_code, population, etc) are the different variables in our data set\nUnderneath those words are the type of variable, which we’ll ignore right now.\nBelow that, you’ll see some numbers and NA values. Those are different values for each variable.\n\nOur data is called co2Data. If you type co2Data into any code chunk, you’ll be able to see our data.\n\n\n\n\nWe can use R to do all sorts of things, including make graphs easily and quickly! In this tutorial we won’t be able to cover all the details of how to make a graph, but there’s lots of resources online you can find to learn more. We use something called ggplot to make graphs in this tutorial.\nFirst, lets make a graph that just looks at the worlds CO2 Emissions over time, this data goes all the way back to 1750!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nWhat if we want to compare this to how the worlds temperature has changed over this same time? We have another dataset that contains temperature data. It tells us how different the temperature each year is from the average in 1900.\nIn the code chunk below type tempData and click “run code” to see the new data set.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nYou should see 2 columns: one called Year and one called Anomaly. The Anomaly column tells us how different the temperature that year was from the average in 1900. This only shows us 10 years, but the data goes all the way to 2023! We can graph the data to visualize it better.\nLets graph this! Click “run code” and see what happens!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNow, what if we combine our co2 data and our temperature data?\nLets put these two data sets together matching up the years. Then, we can make a graph of temperature anomaly and co2 levels. Click “run code”.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nNow what if we ask where most of that CO2 we’re emitting comes from? We can do this with a bar graph that shows the data from the past few years. A bar graph is a little more complicated to make, so we’ve edited some of our data in the background to make it easier to graph with. Our new edited data is called co2DataFiltered.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nLet’s see what a graph looks like! Click “run code”.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nOptional: Open this if you want to learn more about how the code works\n\n\n\n\n\nGGPlot is an awesome tool you can use to create plots! There’s lots of tutorials online that I recommend checking out. But for now, here’s a brief explanation of how our code works. Below, I’ve copied and pasted the code from above, but this time there are explanations scattered throughout. The explanations start with a # (called a comment) and are gray. See if you can find out which line creates the title of the graph!\n\n#Tell R what data to use and what the x and y values are\nggplot(data=co2DataFiltered, mapping=aes(x=year_chr, y=value, fill=name))+\n  \n  #Select what kind of graph we're making\n  geom_col(position=\"dodge\") +\n  \n  #Label the graph to make it easy to read\n  labs(title=\"CO2 Production from Energy Vs. Other Sources\", x=\"Year\", y=\"CO2 In Tons\") +\n  \n  #add a legend to show what each color means \n  scale_fill_discrete(name=\"CO2 Source\", labels=c(\"CO2 from Energy\", \"All Other Sources of CO2\")) +\n  \n  #make it pretty :)\n  theme_light() \n\nWere you able to tell which line created the title??\nIf you want even more code to look at, keep reading! You can also feel free to skip to the next section called Scatter Plot Generator\nBelow, you can see the code that was used to filter our data and make it easier to use in a bar graph. This is code that we ran secretly in the background before you created the bar graph. It takes the co2Data and edits it to make it easier to graph with.\n\n#Creates new columns called \"co2_from_energy\" that includes co2 data from coal, gas, oil. \n#Then creates a column called \"co2_no_energy\" that is the rest of the co2 production\nco2DataBar&lt;-co2Data%&gt;%\n  group_by(year)%&gt;%\n  mutate(co2_from_energy=sum(coal_co2, gas_co2, oil_co2, na.rm=T))%&gt;%\n  mutate(co2_no_energy=co2-co2_from_energy)\n\n#Filter data to get just the columns we need and make it graphable\n#Tells R to only use \"year\", \"co2_no_energy\" and \"co2_from_energy\" in the graph. \nco2DataFiltered&lt;-co2DataBar%&gt;%select(year, co2_no_energy, co2_from_energy)%&gt;%\n  \n  #Chooses only years above 2019\n  filter(year&gt;=2019)%&gt;%\n  \n  #A few final adjustments to make the graph easier to use\n  pivot_longer(cols=c(co2_no_energy, co2_from_energy))%&gt;%\n  mutate(year_chr=as.character(year))\n\n\n\n\n\n\n\nNow you get to try creating your own plot! You will be able to choose any two variables and see how they relate to each other. If your questions haven’t been answered by the infographics and graphs you’ve already seen, take a look at the data and see what you can ask to try and learn more.\nFirst, decide which variable you want to learn about. You can choose any variable from co2Data. Here are some options:\n\npopulation\nyear\ncement_co2\nco2\nconsumption_co2\ncumulative_co2\nenergy_per_gdp\nland_use_change_co2\ngas_co2\ncoal_co2\ncement_co2\nland_use_change_co2\nmethane\ntemperature_change_from_co2\n\nChoose two of these variables that you want to plot against each other. Then, in the code chunk below, type them inside the quotes. Make sure you leave the quotes and just replace the red line. Also make sure you type the variable name exactly - in fact, you can just copy and paste from the list.\nThen click “run code”!\n\nCode editorExample\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nNow, let’s add titles and labels to your graph! Again, type your title between the quotation marks. Then click “run code”!\n\nCode editorExample\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nFinally, run this to see your scatter plot! Click “run code” and if something doesn’t look right, click through the “troubleshooting” tabs to see how to fix it.\n\nCode editorTroubleshooting: error messageTroubleshooting - points clustered at the bottom\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nDid you get an error message in red?\n\nIf the graph also displayed and looks right, don’t worry about the error message!\nIf the graph is not displaying, go back and make sure you ran all the code chunks previously where you defined the variables and labels.\n\nDid you put everything in quotes when you defined the variables and labels?\n\nYou don’t need to edit this code at all, just the code where you define variables and labels\nIf it still isn’t working or if you accidentally deleted something, you can refresh the page to restart.\n\n\n\nIf your x variable is year and your points are clustered at the bottom of your graph, this may be because it goes all the way back to 1750 and there wasn’t much change until much more recently.\nSo try running this code instead. It will display your graph from 2000 to 2020. Note: This code will only work if your x variable is year.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nNice work! Hopefully you enjoyed making your own graph with this data!"
  },
  {
    "objectID": "tutorials/climate_change_tutorial.html#our-data",
    "href": "tutorials/climate_change_tutorial.html#our-data",
    "title": "Climate Change Data Tutorial",
    "section": "",
    "text": "Today we’ll be using R to look at climate data. We will be able to create graphs of different variables in our data, like carbon dioxide emissions and temperature.\nWe’ve preloaded a dataset into this tutorial. This was found\n\n\nLet’s start by taking a look at the data set. Click the green play button below and see what happens!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nYou should see 10 rows of data and a lot of random words. We won’t go into what all of it means, but here’s a quick overview:\n\nThe words on the top (country, year, iso_code, population, etc) are the different variables in our data set\nUnderneath those words are the type of variable, which we’ll ignore right now.\nBelow that, you’ll see some numbers and NA values. Those are different values for each variable.\n\nOur data is called co2Data. If you type co2Data into any code chunk, you’ll be able to see our data."
  },
  {
    "objectID": "tutorials/climate_change_tutorial.html#our-first-graph",
    "href": "tutorials/climate_change_tutorial.html#our-first-graph",
    "title": "Climate Change Data Tutorial",
    "section": "",
    "text": "We can use R to do all sorts of things, including make graphs easily and quickly! In this tutorial we won’t be able to cover all the details of how to make a graph, but there’s lots of resources online you can find to learn more. We use something called ggplot to make graphs in this tutorial.\nFirst, lets make a graph that just looks at the worlds CO2 Emissions over time, this data goes all the way back to 1750!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "tutorials/climate_change_tutorial.html#temperature-data",
    "href": "tutorials/climate_change_tutorial.html#temperature-data",
    "title": "Climate Change Data Tutorial",
    "section": "",
    "text": "What if we want to compare this to how the worlds temperature has changed over this same time? We have another dataset that contains temperature data. It tells us how different the temperature each year is from the average in 1900.\nIn the code chunk below type tempData and click “run code” to see the new data set.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nYou should see 2 columns: one called Year and one called Anomaly. The Anomaly column tells us how different the temperature that year was from the average in 1900. This only shows us 10 years, but the data goes all the way to 2023! We can graph the data to visualize it better.\nLets graph this! Click “run code” and see what happens!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNow, what if we combine our co2 data and our temperature data?\nLets put these two data sets together matching up the years. Then, we can make a graph of temperature anomaly and co2 levels. Click “run code”.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "tutorials/climate_change_tutorial.html#co2-sources",
    "href": "tutorials/climate_change_tutorial.html#co2-sources",
    "title": "Climate Change Data Tutorial",
    "section": "",
    "text": "Now what if we ask where most of that CO2 we’re emitting comes from? We can do this with a bar graph that shows the data from the past few years. A bar graph is a little more complicated to make, so we’ve edited some of our data in the background to make it easier to graph with. Our new edited data is called co2DataFiltered.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nLet’s see what a graph looks like! Click “run code”.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nOptional: Open this if you want to learn more about how the code works\n\n\n\n\n\nGGPlot is an awesome tool you can use to create plots! There’s lots of tutorials online that I recommend checking out. But for now, here’s a brief explanation of how our code works. Below, I’ve copied and pasted the code from above, but this time there are explanations scattered throughout. The explanations start with a # (called a comment) and are gray. See if you can find out which line creates the title of the graph!\n\n#Tell R what data to use and what the x and y values are\nggplot(data=co2DataFiltered, mapping=aes(x=year_chr, y=value, fill=name))+\n  \n  #Select what kind of graph we're making\n  geom_col(position=\"dodge\") +\n  \n  #Label the graph to make it easy to read\n  labs(title=\"CO2 Production from Energy Vs. Other Sources\", x=\"Year\", y=\"CO2 In Tons\") +\n  \n  #add a legend to show what each color means \n  scale_fill_discrete(name=\"CO2 Source\", labels=c(\"CO2 from Energy\", \"All Other Sources of CO2\")) +\n  \n  #make it pretty :)\n  theme_light() \n\nWere you able to tell which line created the title??\nIf you want even more code to look at, keep reading! You can also feel free to skip to the next section called Scatter Plot Generator\nBelow, you can see the code that was used to filter our data and make it easier to use in a bar graph. This is code that we ran secretly in the background before you created the bar graph. It takes the co2Data and edits it to make it easier to graph with.\n\n#Creates new columns called \"co2_from_energy\" that includes co2 data from coal, gas, oil. \n#Then creates a column called \"co2_no_energy\" that is the rest of the co2 production\nco2DataBar&lt;-co2Data%&gt;%\n  group_by(year)%&gt;%\n  mutate(co2_from_energy=sum(coal_co2, gas_co2, oil_co2, na.rm=T))%&gt;%\n  mutate(co2_no_energy=co2-co2_from_energy)\n\n#Filter data to get just the columns we need and make it graphable\n#Tells R to only use \"year\", \"co2_no_energy\" and \"co2_from_energy\" in the graph. \nco2DataFiltered&lt;-co2DataBar%&gt;%select(year, co2_no_energy, co2_from_energy)%&gt;%\n  \n  #Chooses only years above 2019\n  filter(year&gt;=2019)%&gt;%\n  \n  #A few final adjustments to make the graph easier to use\n  pivot_longer(cols=c(co2_no_energy, co2_from_energy))%&gt;%\n  mutate(year_chr=as.character(year))"
  },
  {
    "objectID": "tutorials/climate_change_tutorial.html#scatter-plot-generator",
    "href": "tutorials/climate_change_tutorial.html#scatter-plot-generator",
    "title": "Climate Change Data Tutorial",
    "section": "",
    "text": "Now you get to try creating your own plot! You will be able to choose any two variables and see how they relate to each other. If your questions haven’t been answered by the infographics and graphs you’ve already seen, take a look at the data and see what you can ask to try and learn more.\nFirst, decide which variable you want to learn about. You can choose any variable from co2Data. Here are some options:\n\npopulation\nyear\ncement_co2\nco2\nconsumption_co2\ncumulative_co2\nenergy_per_gdp\nland_use_change_co2\ngas_co2\ncoal_co2\ncement_co2\nland_use_change_co2\nmethane\ntemperature_change_from_co2\n\nChoose two of these variables that you want to plot against each other. Then, in the code chunk below, type them inside the quotes. Make sure you leave the quotes and just replace the red line. Also make sure you type the variable name exactly - in fact, you can just copy and paste from the list.\nThen click “run code”!\n\nCode editorExample\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nNow, let’s add titles and labels to your graph! Again, type your title between the quotation marks. Then click “run code”!\n\nCode editorExample\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nFinally, run this to see your scatter plot! Click “run code” and if something doesn’t look right, click through the “troubleshooting” tabs to see how to fix it.\n\nCode editorTroubleshooting: error messageTroubleshooting - points clustered at the bottom\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nDid you get an error message in red?\n\nIf the graph also displayed and looks right, don’t worry about the error message!\nIf the graph is not displaying, go back and make sure you ran all the code chunks previously where you defined the variables and labels.\n\nDid you put everything in quotes when you defined the variables and labels?\n\nYou don’t need to edit this code at all, just the code where you define variables and labels\nIf it still isn’t working or if you accidentally deleted something, you can refresh the page to restart.\n\n\n\nIf your x variable is year and your points are clustered at the bottom of your graph, this may be because it goes all the way back to 1750 and there wasn’t much change until much more recently.\nSo try running this code instead. It will display your graph from 2000 to 2020. Note: This code will only work if your x variable is year.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nNice work! Hopefully you enjoyed making your own graph with this data!"
  }
]